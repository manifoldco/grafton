package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LoginTokenResponse login token response
// swagger:model LoginTokenResponse
type LoginTokenResponse struct {

	// salt
	// Required: true
	// Max Length: 22
	// Min Length: 22
	// Pattern: ^[a-zA-Z0-9_-]*$
	Salt *string `json:"salt"`

	// token
	// Required: true
	Token *string `json:"token"`
}

// Validate validates this login token response
func (m *LoginTokenResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSalt(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateToken(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LoginTokenResponse) validateSalt(formats strfmt.Registry) error {

	if err := validate.Required("salt", "body", m.Salt); err != nil {
		return err
	}

	if err := validate.MinLength("salt", "body", string(*m.Salt), 22); err != nil {
		return err
	}

	if err := validate.MaxLength("salt", "body", string(*m.Salt), 22); err != nil {
		return err
	}

	if err := validate.Pattern("salt", "body", string(*m.Salt), `^[a-zA-Z0-9_-]*$`); err != nil {
		return err
	}

	return nil
}

func (m *LoginTokenResponse) validateToken(formats strfmt.Registry) error {

	if err := validate.Required("token", "body", m.Token); err != nil {
		return err
	}

	return nil
}
