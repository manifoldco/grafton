package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	manifold "github.com/manifoldco/go-manifold"
	"github.com/manifoldco/grafton/generated/identity/models"
)

// GetTeamsIDReader is a Reader for the GetTeamsID structure.
type GetTeamsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTeamsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetTeamsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetTeamsIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetTeamsIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetTeamsIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetTeamsIDOK creates a GetTeamsIDOK with default headers values
func NewGetTeamsIDOK() *GetTeamsIDOK {
	return &GetTeamsIDOK{}
}

/*GetTeamsIDOK handles this case with default header values.

Complete team object
*/
type GetTeamsIDOK struct {
	Payload *models.Team
}

func (o *GetTeamsIDOK) Error() string {
	return fmt.Sprintf("[GET /teams/{id}][%d] getTeamsIdOK  %+v", 200, o.Payload)
}

func (o *GetTeamsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Team)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamsIDBadRequest creates a GetTeamsIDBadRequest with default headers values
func NewGetTeamsIDBadRequest() *GetTeamsIDBadRequest {
	return &GetTeamsIDBadRequest{}
}

/*GetTeamsIDBadRequest handles this case with default header values.

Validation failed for request
*/
type GetTeamsIDBadRequest struct {
	Payload *manifold.Error
}

func (o *GetTeamsIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /teams/{id}][%d] getTeamsIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetTeamsIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(manifold.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamsIDInternalServerError creates a GetTeamsIDInternalServerError with default headers values
func NewGetTeamsIDInternalServerError() *GetTeamsIDInternalServerError {
	return &GetTeamsIDInternalServerError{}
}

/*GetTeamsIDInternalServerError handles this case with default header values.

Request failed due to an internal server error.
*/
type GetTeamsIDInternalServerError struct {
	Payload *manifold.Error
}

func (o *GetTeamsIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /teams/{id}][%d] getTeamsIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTeamsIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(manifold.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamsIDDefault creates a GetTeamsIDDefault with default headers values
func NewGetTeamsIDDefault(code int) *GetTeamsIDDefault {
	return &GetTeamsIDDefault{
		_statusCode: code,
	}
}

/*GetTeamsIDDefault handles this case with default header values.

Unexpected error
*/
type GetTeamsIDDefault struct {
	_statusCode int

	Payload *manifold.Error
}

// Code gets the status code for the get teams ID default response
func (o *GetTeamsIDDefault) Code() int {
	return o._statusCode
}

func (o *GetTeamsIDDefault) Error() string {
	return fmt.Sprintf("[GET /teams/{id}][%d] GetTeamsID default  %+v", o._statusCode, o.Payload)
}

func (o *GetTeamsIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(manifold.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
