package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	manifold "github.com/manifoldco/go-manifold"
	"github.com/manifoldco/grafton/generated/identity/models"
)

// PatchTeamsIDReader is a Reader for the PatchTeamsID structure.
type PatchTeamsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchTeamsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPatchTeamsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPatchTeamsIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPatchTeamsIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPatchTeamsIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPatchTeamsIDOK creates a PatchTeamsIDOK with default headers values
func NewPatchTeamsIDOK() *PatchTeamsIDOK {
	return &PatchTeamsIDOK{}
}

/*PatchTeamsIDOK handles this case with default header values.

Complete team object
*/
type PatchTeamsIDOK struct {
	Payload *models.Team
}

func (o *PatchTeamsIDOK) Error() string {
	return fmt.Sprintf("[PATCH /teams/{id}][%d] patchTeamsIdOK  %+v", 200, o.Payload)
}

func (o *PatchTeamsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Team)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchTeamsIDBadRequest creates a PatchTeamsIDBadRequest with default headers values
func NewPatchTeamsIDBadRequest() *PatchTeamsIDBadRequest {
	return &PatchTeamsIDBadRequest{}
}

/*PatchTeamsIDBadRequest handles this case with default header values.

Validation failed for request
*/
type PatchTeamsIDBadRequest struct {
	Payload *manifold.Error
}

func (o *PatchTeamsIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /teams/{id}][%d] patchTeamsIdBadRequest  %+v", 400, o.Payload)
}

func (o *PatchTeamsIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(manifold.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchTeamsIDInternalServerError creates a PatchTeamsIDInternalServerError with default headers values
func NewPatchTeamsIDInternalServerError() *PatchTeamsIDInternalServerError {
	return &PatchTeamsIDInternalServerError{}
}

/*PatchTeamsIDInternalServerError handles this case with default header values.

Request failed due to an internal server error.
*/
type PatchTeamsIDInternalServerError struct {
	Payload *manifold.Error
}

func (o *PatchTeamsIDInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /teams/{id}][%d] patchTeamsIdInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchTeamsIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(manifold.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchTeamsIDDefault creates a PatchTeamsIDDefault with default headers values
func NewPatchTeamsIDDefault(code int) *PatchTeamsIDDefault {
	return &PatchTeamsIDDefault{
		_statusCode: code,
	}
}

/*PatchTeamsIDDefault handles this case with default header values.

Unexpected error
*/
type PatchTeamsIDDefault struct {
	_statusCode int

	Payload *manifold.Error
}

// Code gets the status code for the patch teams ID default response
func (o *PatchTeamsIDDefault) Code() int {
	return o._statusCode
}

func (o *PatchTeamsIDDefault) Error() string {
	return fmt.Sprintf("[PATCH /teams/{id}][%d] PatchTeamsID default  %+v", o._statusCode, o.Payload)
}

func (o *PatchTeamsIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(manifold.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
