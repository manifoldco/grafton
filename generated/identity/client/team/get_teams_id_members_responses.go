package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	manifold "github.com/manifoldco/go-manifold"
	"github.com/manifoldco/grafton/generated/identity/models"
)

// GetTeamsIDMembersReader is a Reader for the GetTeamsIDMembers structure.
type GetTeamsIDMembersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTeamsIDMembersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetTeamsIDMembersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetTeamsIDMembersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetTeamsIDMembersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetTeamsIDMembersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetTeamsIDMembersDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetTeamsIDMembersOK creates a GetTeamsIDMembersOK with default headers values
func NewGetTeamsIDMembersOK() *GetTeamsIDMembersOK {
	return &GetTeamsIDMembersOK{}
}

/*GetTeamsIDMembersOK handles this case with default header values.

List of users
*/
type GetTeamsIDMembersOK struct {
	Payload []*models.MemberProfile
}

func (o *GetTeamsIDMembersOK) Error() string {
	return fmt.Sprintf("[GET /teams/{id}/members][%d] getTeamsIdMembersOK  %+v", 200, o.Payload)
}

func (o *GetTeamsIDMembersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamsIDMembersBadRequest creates a GetTeamsIDMembersBadRequest with default headers values
func NewGetTeamsIDMembersBadRequest() *GetTeamsIDMembersBadRequest {
	return &GetTeamsIDMembersBadRequest{}
}

/*GetTeamsIDMembersBadRequest handles this case with default header values.

Validation failed for request.
*/
type GetTeamsIDMembersBadRequest struct {
	Payload *manifold.Error
}

func (o *GetTeamsIDMembersBadRequest) Error() string {
	return fmt.Sprintf("[GET /teams/{id}/members][%d] getTeamsIdMembersBadRequest  %+v", 400, o.Payload)
}

func (o *GetTeamsIDMembersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(manifold.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamsIDMembersUnauthorized creates a GetTeamsIDMembersUnauthorized with default headers values
func NewGetTeamsIDMembersUnauthorized() *GetTeamsIDMembersUnauthorized {
	return &GetTeamsIDMembersUnauthorized{}
}

/*GetTeamsIDMembersUnauthorized handles this case with default header values.

Authentication failed for the request.
*/
type GetTeamsIDMembersUnauthorized struct {
	Payload *manifold.Error
}

func (o *GetTeamsIDMembersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /teams/{id}/members][%d] getTeamsIdMembersUnauthorized  %+v", 401, o.Payload)
}

func (o *GetTeamsIDMembersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(manifold.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamsIDMembersInternalServerError creates a GetTeamsIDMembersInternalServerError with default headers values
func NewGetTeamsIDMembersInternalServerError() *GetTeamsIDMembersInternalServerError {
	return &GetTeamsIDMembersInternalServerError{}
}

/*GetTeamsIDMembersInternalServerError handles this case with default header values.

Request failed due to an internal server error.
*/
type GetTeamsIDMembersInternalServerError struct {
	Payload *manifold.Error
}

func (o *GetTeamsIDMembersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /teams/{id}/members][%d] getTeamsIdMembersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTeamsIDMembersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(manifold.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamsIDMembersDefault creates a GetTeamsIDMembersDefault with default headers values
func NewGetTeamsIDMembersDefault(code int) *GetTeamsIDMembersDefault {
	return &GetTeamsIDMembersDefault{
		_statusCode: code,
	}
}

/*GetTeamsIDMembersDefault handles this case with default header values.

Unexpected error
*/
type GetTeamsIDMembersDefault struct {
	_statusCode int

	Payload *manifold.Error
}

// Code gets the status code for the get teams ID members default response
func (o *GetTeamsIDMembersDefault) Code() int {
	return o._statusCode
}

func (o *GetTeamsIDMembersDefault) Error() string {
	return fmt.Sprintf("[GET /teams/{id}/members][%d] GetTeamsIDMembers default  %+v", o._statusCode, o.Payload)
}

func (o *GetTeamsIDMembersDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(manifold.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
