package authentication

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	manifold "github.com/manifoldco/go-manifold"
	"github.com/manifoldco/grafton/generated/identity/models"
)

// GetTokensReader is a Reader for the GetTokens structure.
type GetTokensReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTokensReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetTokensOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetTokensUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetTokensInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetTokensDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetTokensOK creates a GetTokensOK with default headers values
func NewGetTokensOK() *GetTokensOK {
	return &GetTokensOK{}
}

/*GetTokensOK handles this case with default header values.

A list of API tokens.
*/
type GetTokensOK struct {
	Payload []*models.APIToken
}

func (o *GetTokensOK) Error() string {
	return fmt.Sprintf("[GET /tokens][%d] getTokensOK  %+v", 200, o.Payload)
}

func (o *GetTokensOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTokensUnauthorized creates a GetTokensUnauthorized with default headers values
func NewGetTokensUnauthorized() *GetTokensUnauthorized {
	return &GetTokensUnauthorized{}
}

/*GetTokensUnauthorized handles this case with default header values.

Unknown token, or token not owned the the requester
*/
type GetTokensUnauthorized struct {
	Payload *manifold.Error
}

func (o *GetTokensUnauthorized) Error() string {
	return fmt.Sprintf("[GET /tokens][%d] getTokensUnauthorized  %+v", 401, o.Payload)
}

func (o *GetTokensUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(manifold.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTokensInternalServerError creates a GetTokensInternalServerError with default headers values
func NewGetTokensInternalServerError() *GetTokensInternalServerError {
	return &GetTokensInternalServerError{}
}

/*GetTokensInternalServerError handles this case with default header values.

Request failed due to an internal server error.
*/
type GetTokensInternalServerError struct {
	Payload *manifold.Error
}

func (o *GetTokensInternalServerError) Error() string {
	return fmt.Sprintf("[GET /tokens][%d] getTokensInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTokensInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(manifold.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTokensDefault creates a GetTokensDefault with default headers values
func NewGetTokensDefault(code int) *GetTokensDefault {
	return &GetTokensDefault{
		_statusCode: code,
	}
}

/*GetTokensDefault handles this case with default header values.

Unexpected error
*/
type GetTokensDefault struct {
	_statusCode int

	Payload *manifold.Error
}

// Code gets the status code for the get tokens default response
func (o *GetTokensDefault) Code() int {
	return o._statusCode
}

func (o *GetTokensDefault) Error() string {
	return fmt.Sprintf("[GET /tokens][%d] GetTokens default  %+v", o._statusCode, o.Payload)
}

func (o *GetTokensDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(manifold.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
