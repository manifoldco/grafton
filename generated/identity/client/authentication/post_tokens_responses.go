package authentication

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	manifold "github.com/manifoldco/go-manifold"
	"github.com/manifoldco/grafton/generated/identity/models"
)

// PostTokensReader is a Reader for the PostTokens structure.
type PostTokensReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostTokensReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostTokensCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostTokensBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPostTokensInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPostTokensDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostTokensCreated creates a PostTokensCreated with default headers values
func NewPostTokensCreated() *PostTokensCreated {
	return &PostTokensCreated{}
}

/*PostTokensCreated handles this case with default header values.

An API token.
*/
type PostTokensCreated struct {
	Payload *models.APIToken
}

func (o *PostTokensCreated) Error() string {
	return fmt.Sprintf("[POST /tokens][%d] postTokensCreated  %+v", 201, o.Payload)
}

func (o *PostTokensCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIToken)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTokensBadRequest creates a PostTokensBadRequest with default headers values
func NewPostTokensBadRequest() *PostTokensBadRequest {
	return &PostTokensBadRequest{}
}

/*PostTokensBadRequest handles this case with default header values.

Invalid token request supplied
*/
type PostTokensBadRequest struct {
	Payload *manifold.Error
}

func (o *PostTokensBadRequest) Error() string {
	return fmt.Sprintf("[POST /tokens][%d] postTokensBadRequest  %+v", 400, o.Payload)
}

func (o *PostTokensBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(manifold.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTokensInternalServerError creates a PostTokensInternalServerError with default headers values
func NewPostTokensInternalServerError() *PostTokensInternalServerError {
	return &PostTokensInternalServerError{}
}

/*PostTokensInternalServerError handles this case with default header values.

Request failed due to an internal server error.
*/
type PostTokensInternalServerError struct {
	Payload *manifold.Error
}

func (o *PostTokensInternalServerError) Error() string {
	return fmt.Sprintf("[POST /tokens][%d] postTokensInternalServerError  %+v", 500, o.Payload)
}

func (o *PostTokensInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(manifold.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTokensDefault creates a PostTokensDefault with default headers values
func NewPostTokensDefault(code int) *PostTokensDefault {
	return &PostTokensDefault{
		_statusCode: code,
	}
}

/*PostTokensDefault handles this case with default header values.

Unexpected error
*/
type PostTokensDefault struct {
	_statusCode int

	Payload *manifold.Error
}

// Code gets the status code for the post tokens default response
func (o *PostTokensDefault) Code() int {
	return o._statusCode
}

func (o *PostTokensDefault) Error() string {
	return fmt.Sprintf("[POST /tokens][%d] PostTokens default  %+v", o._statusCode, o.Payload)
}

func (o *PostTokensDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(manifold.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
