package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	manifold "github.com/manifoldco/go-manifold"

	strfmt "github.com/go-openapi/strfmt"
)

// PostUsersForgotPasswordReader is a Reader for the PostUsersForgotPassword structure.
type PostUsersForgotPasswordReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostUsersForgotPasswordReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewPostUsersForgotPasswordNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostUsersForgotPasswordBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostUsersForgotPasswordUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPostUsersForgotPasswordInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPostUsersForgotPasswordDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostUsersForgotPasswordNoContent creates a PostUsersForgotPasswordNoContent with default headers values
func NewPostUsersForgotPasswordNoContent() *PostUsersForgotPasswordNoContent {
	return &PostUsersForgotPasswordNoContent{}
}

/*PostUsersForgotPasswordNoContent handles this case with default header values.

Forgot password complete
*/
type PostUsersForgotPasswordNoContent struct {
}

func (o *PostUsersForgotPasswordNoContent) Error() string {
	return fmt.Sprintf("[POST /users/forgot-password][%d] postUsersForgotPasswordNoContent ", 204)
}

func (o *PostUsersForgotPasswordNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUsersForgotPasswordBadRequest creates a PostUsersForgotPasswordBadRequest with default headers values
func NewPostUsersForgotPasswordBadRequest() *PostUsersForgotPasswordBadRequest {
	return &PostUsersForgotPasswordBadRequest{}
}

/*PostUsersForgotPasswordBadRequest handles this case with default header values.

Validation failed for request
*/
type PostUsersForgotPasswordBadRequest struct {
	Payload *manifold.Error
}

func (o *PostUsersForgotPasswordBadRequest) Error() string {
	return fmt.Sprintf("[POST /users/forgot-password][%d] postUsersForgotPasswordBadRequest  %+v", 400, o.Payload)
}

func (o *PostUsersForgotPasswordBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(manifold.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUsersForgotPasswordUnauthorized creates a PostUsersForgotPasswordUnauthorized with default headers values
func NewPostUsersForgotPasswordUnauthorized() *PostUsersForgotPasswordUnauthorized {
	return &PostUsersForgotPasswordUnauthorized{}
}

/*PostUsersForgotPasswordUnauthorized handles this case with default header values.

Validation failed for request
*/
type PostUsersForgotPasswordUnauthorized struct {
	Payload *manifold.Error
}

func (o *PostUsersForgotPasswordUnauthorized) Error() string {
	return fmt.Sprintf("[POST /users/forgot-password][%d] postUsersForgotPasswordUnauthorized  %+v", 401, o.Payload)
}

func (o *PostUsersForgotPasswordUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(manifold.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUsersForgotPasswordInternalServerError creates a PostUsersForgotPasswordInternalServerError with default headers values
func NewPostUsersForgotPasswordInternalServerError() *PostUsersForgotPasswordInternalServerError {
	return &PostUsersForgotPasswordInternalServerError{}
}

/*PostUsersForgotPasswordInternalServerError handles this case with default header values.

Request failed due to an internal server error.
*/
type PostUsersForgotPasswordInternalServerError struct {
	Payload *manifold.Error
}

func (o *PostUsersForgotPasswordInternalServerError) Error() string {
	return fmt.Sprintf("[POST /users/forgot-password][%d] postUsersForgotPasswordInternalServerError  %+v", 500, o.Payload)
}

func (o *PostUsersForgotPasswordInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(manifold.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUsersForgotPasswordDefault creates a PostUsersForgotPasswordDefault with default headers values
func NewPostUsersForgotPasswordDefault(code int) *PostUsersForgotPasswordDefault {
	return &PostUsersForgotPasswordDefault{
		_statusCode: code,
	}
}

/*PostUsersForgotPasswordDefault handles this case with default header values.

Unexpected error
*/
type PostUsersForgotPasswordDefault struct {
	_statusCode int

	Payload *manifold.Error
}

// Code gets the status code for the post users forgot password default response
func (o *PostUsersForgotPasswordDefault) Code() int {
	return o._statusCode
}

func (o *PostUsersForgotPasswordDefault) Error() string {
	return fmt.Sprintf("[POST /users/forgot-password][%d] PostUsersForgotPassword default  %+v", o._statusCode, o.Payload)
}

func (o *PostUsersForgotPasswordDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(manifold.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
