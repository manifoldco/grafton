package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	manifold "github.com/manifoldco/go-manifold"

	strfmt "github.com/go-openapi/strfmt"
)

// PostAnalyticsReader is a Reader for the PostAnalytics structure.
type PostAnalyticsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAnalyticsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewPostAnalyticsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostAnalyticsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostAnalyticsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPostAnalyticsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostAnalyticsNoContent creates a PostAnalyticsNoContent with default headers values
func NewPostAnalyticsNoContent() *PostAnalyticsNoContent {
	return &PostAnalyticsNoContent{}
}

/*PostAnalyticsNoContent handles this case with default header values.

An empty response
*/
type PostAnalyticsNoContent struct {
}

func (o *PostAnalyticsNoContent) Error() string {
	return fmt.Sprintf("[POST /analytics/][%d] postAnalyticsNoContent ", 204)
}

func (o *PostAnalyticsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostAnalyticsBadRequest creates a PostAnalyticsBadRequest with default headers values
func NewPostAnalyticsBadRequest() *PostAnalyticsBadRequest {
	return &PostAnalyticsBadRequest{}
}

/*PostAnalyticsBadRequest handles this case with default header values.

Invalid request
*/
type PostAnalyticsBadRequest struct {
	Payload *manifold.Error
}

func (o *PostAnalyticsBadRequest) Error() string {
	return fmt.Sprintf("[POST /analytics/][%d] postAnalyticsBadRequest  %+v", 400, o.Payload)
}

func (o *PostAnalyticsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(manifold.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsUnauthorized creates a PostAnalyticsUnauthorized with default headers values
func NewPostAnalyticsUnauthorized() *PostAnalyticsUnauthorized {
	return &PostAnalyticsUnauthorized{}
}

/*PostAnalyticsUnauthorized handles this case with default header values.

Unknown token, or token not owned the the requester
*/
type PostAnalyticsUnauthorized struct {
	Payload *manifold.Error
}

func (o *PostAnalyticsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /analytics/][%d] postAnalyticsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostAnalyticsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(manifold.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAnalyticsInternalServerError creates a PostAnalyticsInternalServerError with default headers values
func NewPostAnalyticsInternalServerError() *PostAnalyticsInternalServerError {
	return &PostAnalyticsInternalServerError{}
}

/*PostAnalyticsInternalServerError handles this case with default header values.

Request failed due to an internal server error.
*/
type PostAnalyticsInternalServerError struct {
	Payload *manifold.Error
}

func (o *PostAnalyticsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /analytics/][%d] postAnalyticsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostAnalyticsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(manifold.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
