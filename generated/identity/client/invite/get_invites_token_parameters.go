package invite

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetInvitesTokenParams creates a new GetInvitesTokenParams object
// with the default values initialized.
func NewGetInvitesTokenParams() *GetInvitesTokenParams {
	var ()
	return &GetInvitesTokenParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetInvitesTokenParamsWithTimeout creates a new GetInvitesTokenParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetInvitesTokenParamsWithTimeout(timeout time.Duration) *GetInvitesTokenParams {
	var ()
	return &GetInvitesTokenParams{

		timeout: timeout,
	}
}

// NewGetInvitesTokenParamsWithContext creates a new GetInvitesTokenParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetInvitesTokenParamsWithContext(ctx context.Context) *GetInvitesTokenParams {
	var ()
	return &GetInvitesTokenParams{

		Context: ctx,
	}
}

// NewGetInvitesTokenParamsWithHTTPClient creates a new GetInvitesTokenParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetInvitesTokenParamsWithHTTPClient(client *http.Client) *GetInvitesTokenParams {
	var ()
	return &GetInvitesTokenParams{
		HTTPClient: client,
	}
}

/*GetInvitesTokenParams contains all the parameters to send to the API endpoint
for the get invites token operation typically these are written to a http.Request
*/
type GetInvitesTokenParams struct {

	/*Token
	  Token corresponding to the Invite being retrieved.


	*/
	Token string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get invites token params
func (o *GetInvitesTokenParams) WithTimeout(timeout time.Duration) *GetInvitesTokenParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get invites token params
func (o *GetInvitesTokenParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get invites token params
func (o *GetInvitesTokenParams) WithContext(ctx context.Context) *GetInvitesTokenParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get invites token params
func (o *GetInvitesTokenParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get invites token params
func (o *GetInvitesTokenParams) WithHTTPClient(client *http.Client) *GetInvitesTokenParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get invites token params
func (o *GetInvitesTokenParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithToken adds the token to the get invites token params
func (o *GetInvitesTokenParams) WithToken(token string) *GetInvitesTokenParams {
	o.SetToken(token)
	return o
}

// SetToken adds the token to the get invites token params
func (o *GetInvitesTokenParams) SetToken(token string) {
	o.Token = token
}

// WriteToRequest writes these params to a swagger request
func (o *GetInvitesTokenParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param token
	if err := r.SetPathParam("token", o.Token); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
