package single_sign_on

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetSsoReader is a Reader for the GetSso structure.
type GetSsoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSsoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSsoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 302:
		result := NewGetSsoFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 303:
		result := NewGetSsoSeeOther()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetSsoDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSsoOK creates a GetSsoOK with default headers values
func NewGetSsoOK() *GetSsoOK {
	return &GetSsoOK{}
}

/*GetSsoOK handles this case with default header values.

If the request was successful and an access token has been acquired
for the user, the dashboard can be returned *or* they can be
forwarded to the dashboard using an HTML redirect.

*/
type GetSsoOK struct {
}

func (o *GetSsoOK) Error() string {
	return fmt.Sprintf("[GET /sso/][%d] getSsoOK ", 200)
}

func (o *GetSsoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSsoFound creates a GetSsoFound with default headers values
func NewGetSsoFound() *GetSsoFound {
	return &GetSsoFound{}
}

/*GetSsoFound handles this case with default header values.

If the request was successful and an access token has been acquired
for the user, the user can be forwarded to the requested dashboard
using an HTTP redirect.

*NOTE*: `303 See Other` is the preferred method for redirecting a user
to their dashboard via HTTP.

*/
type GetSsoFound struct {
	/*Location of the Resources' dashboard.
	 */
	Location string
}

func (o *GetSsoFound) Error() string {
	return fmt.Sprintf("[GET /sso/][%d] getSsoFound ", 302)
}

func (o *GetSsoFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	return nil
}

// NewGetSsoSeeOther creates a GetSsoSeeOther with default headers values
func NewGetSsoSeeOther() *GetSsoSeeOther {
	return &GetSsoSeeOther{}
}

/*GetSsoSeeOther handles this case with default header values.

If the request was successful and an access token has been acquired
for the user, the user can be forwarded to the requested dashboard
using an HTTP redirect.

This is the preferred method for redirecting user's to their
dashboards via HTTP.

*/
type GetSsoSeeOther struct {
	/*Location of the Resources' dashboard.
	 */
	Location string
}

func (o *GetSsoSeeOther) Error() string {
	return fmt.Sprintf("[GET /sso/][%d] getSsoSeeOther ", 303)
}

func (o *GetSsoSeeOther) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	return nil
}

// NewGetSsoDefault creates a GetSsoDefault with default headers values
func NewGetSsoDefault(code int) *GetSsoDefault {
	return &GetSsoDefault{
		_statusCode: code,
	}
}

/*GetSsoDefault handles this case with default header values.

If the request could not be processed successfully, a useful error
message should be displayed to the user.

*/
type GetSsoDefault struct {
	_statusCode int
}

// Code gets the status code for the get sso default response
func (o *GetSsoDefault) Code() int {
	return o._statusCode
}

func (o *GetSsoDefault) Error() string {
	return fmt.Sprintf("[GET /sso/][%d] GetSso default ", o._statusCode)
}

func (o *GetSsoDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
