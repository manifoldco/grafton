package resource

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/manifoldco/grafton/generated/provider/models"
)

// GetResourcesIDMeasuresReader is a Reader for the GetResourcesIDMeasures structure.
type GetResourcesIDMeasuresReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResourcesIDMeasuresReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetResourcesIDMeasuresOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetResourcesIDMeasuresNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetResourcesIDMeasuresBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetResourcesIDMeasuresUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetResourcesIDMeasuresNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetResourcesIDMeasuresInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetResourcesIDMeasuresOK creates a GetResourcesIDMeasuresOK with default headers values
func NewGetResourcesIDMeasuresOK() *GetResourcesIDMeasuresOK {
	return &GetResourcesIDMeasuresOK{}
}

/*GetResourcesIDMeasuresOK handles this case with default header values.

A response should contain a measures map in which the key represents a
resource feature and the value is the most updated usage value of the
feature. This usage value is assumed to be the sum total of usage
for that feature for the billing period

*/
type GetResourcesIDMeasuresOK struct {
	Payload *models.ResourceMeasures
}

func (o *GetResourcesIDMeasuresOK) Error() string {
	return fmt.Sprintf("[GET /resources/{id}/measures][%d] getResourcesIdMeasuresOK  %+v", 200, o.Payload)
}

func (o *GetResourcesIDMeasuresOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResourceMeasures)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourcesIDMeasuresNoContent creates a GetResourcesIDMeasuresNoContent with default headers values
func NewGetResourcesIDMeasuresNoContent() *GetResourcesIDMeasuresNoContent {
	return &GetResourcesIDMeasuresNoContent{}
}

/*GetResourcesIDMeasuresNoContent handles this case with default header values.

The resource was found, but no measurable data is available yet.

*/
type GetResourcesIDMeasuresNoContent struct {
}

func (o *GetResourcesIDMeasuresNoContent) Error() string {
	return fmt.Sprintf("[GET /resources/{id}/measures][%d] getResourcesIdMeasuresNoContent ", 204)
}

func (o *GetResourcesIDMeasuresNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetResourcesIDMeasuresBadRequest creates a GetResourcesIDMeasuresBadRequest with default headers values
func NewGetResourcesIDMeasuresBadRequest() *GetResourcesIDMeasuresBadRequest {
	return &GetResourcesIDMeasuresBadRequest{}
}

/*GetResourcesIDMeasuresBadRequest handles this case with default header values.

Request denied due to invalid request body.
*/
type GetResourcesIDMeasuresBadRequest struct {
	Payload GetResourcesIDMeasuresBadRequestBody
}

func (o *GetResourcesIDMeasuresBadRequest) Error() string {
	return fmt.Sprintf("[GET /resources/{id}/measures][%d] getResourcesIdMeasuresBadRequest  %+v", 400, o.Payload)
}

func (o *GetResourcesIDMeasuresBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourcesIDMeasuresUnauthorized creates a GetResourcesIDMeasuresUnauthorized with default headers values
func NewGetResourcesIDMeasuresUnauthorized() *GetResourcesIDMeasuresUnauthorized {
	return &GetResourcesIDMeasuresUnauthorized{}
}

/*GetResourcesIDMeasuresUnauthorized handles this case with default header values.

Request authenticity could not be validated.
*/
type GetResourcesIDMeasuresUnauthorized struct {
	Payload GetResourcesIDMeasuresUnauthorizedBody
}

func (o *GetResourcesIDMeasuresUnauthorized) Error() string {
	return fmt.Sprintf("[GET /resources/{id}/measures][%d] getResourcesIdMeasuresUnauthorized  %+v", 401, o.Payload)
}

func (o *GetResourcesIDMeasuresUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourcesIDMeasuresNotFound creates a GetResourcesIDMeasuresNotFound with default headers values
func NewGetResourcesIDMeasuresNotFound() *GetResourcesIDMeasuresNotFound {
	return &GetResourcesIDMeasuresNotFound{}
}

/*GetResourcesIDMeasuresNotFound handles this case with default header values.

Requested entity could not be found.
*/
type GetResourcesIDMeasuresNotFound struct {
	Payload GetResourcesIDMeasuresNotFoundBody
}

func (o *GetResourcesIDMeasuresNotFound) Error() string {
	return fmt.Sprintf("[GET /resources/{id}/measures][%d] getResourcesIdMeasuresNotFound  %+v", 404, o.Payload)
}

func (o *GetResourcesIDMeasuresNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourcesIDMeasuresInternalServerError creates a GetResourcesIDMeasuresInternalServerError with default headers values
func NewGetResourcesIDMeasuresInternalServerError() *GetResourcesIDMeasuresInternalServerError {
	return &GetResourcesIDMeasuresInternalServerError{}
}

/*GetResourcesIDMeasuresInternalServerError handles this case with default header values.

Request failed due to an internal server error.
*/
type GetResourcesIDMeasuresInternalServerError struct {
	Payload GetResourcesIDMeasuresInternalServerErrorBody
}

func (o *GetResourcesIDMeasuresInternalServerError) Error() string {
	return fmt.Sprintf("[GET /resources/{id}/measures][%d] getResourcesIdMeasuresInternalServerError  %+v", 500, o.Payload)
}

func (o *GetResourcesIDMeasuresInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetResourcesIDMeasuresBadRequestBody get resources ID measures bad request body
swagger:model GetResourcesIDMeasuresBadRequestBody
*/
type GetResourcesIDMeasuresBadRequestBody struct {

	// message
	// Required: true
	// Max Length: 256
	// Min Length: 3
	Message *string `json:"message"`
}

// Validate validates this get resources ID measures bad request body
func (o *GetResourcesIDMeasuresBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetResourcesIDMeasuresBadRequestBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("getResourcesIdMeasuresBadRequest"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	if err := validate.MinLength("getResourcesIdMeasuresBadRequest"+"."+"message", "body", string(*o.Message), 3); err != nil {
		return err
	}

	if err := validate.MaxLength("getResourcesIdMeasuresBadRequest"+"."+"message", "body", string(*o.Message), 256); err != nil {
		return err
	}

	return nil
}

/*GetResourcesIDMeasuresInternalServerErrorBody get resources ID measures internal server error body
swagger:model GetResourcesIDMeasuresInternalServerErrorBody
*/
type GetResourcesIDMeasuresInternalServerErrorBody struct {

	// message
	// Required: true
	// Max Length: 256
	// Min Length: 3
	Message *string `json:"message"`
}

// Validate validates this get resources ID measures internal server error body
func (o *GetResourcesIDMeasuresInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetResourcesIDMeasuresInternalServerErrorBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("getResourcesIdMeasuresInternalServerError"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	if err := validate.MinLength("getResourcesIdMeasuresInternalServerError"+"."+"message", "body", string(*o.Message), 3); err != nil {
		return err
	}

	if err := validate.MaxLength("getResourcesIdMeasuresInternalServerError"+"."+"message", "body", string(*o.Message), 256); err != nil {
		return err
	}

	return nil
}

/*GetResourcesIDMeasuresNotFoundBody get resources ID measures not found body
swagger:model GetResourcesIDMeasuresNotFoundBody
*/
type GetResourcesIDMeasuresNotFoundBody struct {

	// message
	// Required: true
	// Max Length: 256
	// Min Length: 3
	Message *string `json:"message"`
}

// Validate validates this get resources ID measures not found body
func (o *GetResourcesIDMeasuresNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetResourcesIDMeasuresNotFoundBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("getResourcesIdMeasuresNotFound"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	if err := validate.MinLength("getResourcesIdMeasuresNotFound"+"."+"message", "body", string(*o.Message), 3); err != nil {
		return err
	}

	if err := validate.MaxLength("getResourcesIdMeasuresNotFound"+"."+"message", "body", string(*o.Message), 256); err != nil {
		return err
	}

	return nil
}

/*GetResourcesIDMeasuresUnauthorizedBody get resources ID measures unauthorized body
swagger:model GetResourcesIDMeasuresUnauthorizedBody
*/
type GetResourcesIDMeasuresUnauthorizedBody struct {

	// message
	// Required: true
	// Max Length: 256
	// Min Length: 3
	Message *string `json:"message"`
}

// Validate validates this get resources ID measures unauthorized body
func (o *GetResourcesIDMeasuresUnauthorizedBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetResourcesIDMeasuresUnauthorizedBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("getResourcesIdMeasuresUnauthorized"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	if err := validate.MinLength("getResourcesIdMeasuresUnauthorized"+"."+"message", "body", string(*o.Message), 3); err != nil {
		return err
	}

	if err := validate.MaxLength("getResourcesIdMeasuresUnauthorized"+"."+"message", "body", string(*o.Message), 256); err != nil {
		return err
	}

	return nil
}
