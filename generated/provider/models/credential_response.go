package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// CredentialResponse The response expected back from a Provider to provision a set of
// Credentials for a resource.
//
// swagger:model CredentialResponse
type CredentialResponse struct {

	// All key values must be strings and valid environment variable names.
	//
	// Names must match this expression: `^[A-Z][A-Z0-9_]{0,127}$`
	//
	// Required: true
	Credentials map[string]string `json:"credentials"`

	// message
	Message Message `json:"message,omitempty"`
}

// Validate validates this credential response
func (m *CredentialResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCredentials(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CredentialResponse) validateCredentials(formats strfmt.Registry) error {

	if swag.IsZero(m.Credentials) { // not required
		return nil
	}

	return nil
}

func (m *CredentialResponse) validateMessage(formats strfmt.Registry) error {

	if swag.IsZero(m.Message) { // not required
		return nil
	}

	if err := m.Message.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("message")
		}
		return err
	}

	return nil
}
