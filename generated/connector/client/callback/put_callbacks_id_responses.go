package callback

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// PutCallbacksIDReader is a Reader for the PutCallbacksID structure.
type PutCallbacksIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutCallbacksIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewPutCallbacksIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutCallbacksIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPutCallbacksIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutCallbacksIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPutCallbacksIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutCallbacksIDNoContent creates a PutCallbacksIDNoContent with default headers values
func NewPutCallbacksIDNoContent() *PutCallbacksIDNoContent {
	return &PutCallbacksIDNoContent{}
}

/*PutCallbacksIDNoContent handles this case with default header values.

The callback payload has been accepted, Manifold is no longer
waiting for the callback to be received to continue on with the
current operation.

*/
type PutCallbacksIDNoContent struct {
}

func (o *PutCallbacksIDNoContent) Error() string {
	return fmt.Sprintf("[PUT /callbacks/{id}][%d] putCallbacksIdNoContent ", 204)
}

func (o *PutCallbacksIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutCallbacksIDBadRequest creates a PutCallbacksIDBadRequest with default headers values
func NewPutCallbacksIDBadRequest() *PutCallbacksIDBadRequest {
	return &PutCallbacksIDBadRequest{}
}

/*PutCallbacksIDBadRequest handles this case with default header values.

Request denied due to invalid request body, path, or headers.
*/
type PutCallbacksIDBadRequest struct {
	Payload PutCallbacksIDBadRequestBody
}

func (o *PutCallbacksIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /callbacks/{id}][%d] putCallbacksIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutCallbacksIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutCallbacksIDUnauthorized creates a PutCallbacksIDUnauthorized with default headers values
func NewPutCallbacksIDUnauthorized() *PutCallbacksIDUnauthorized {
	return &PutCallbacksIDUnauthorized{}
}

/*PutCallbacksIDUnauthorized handles this case with default header values.

Request denied as the provided credentials are no longer valid.
*/
type PutCallbacksIDUnauthorized struct {
	Payload PutCallbacksIDUnauthorizedBody
}

func (o *PutCallbacksIDUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /callbacks/{id}][%d] putCallbacksIdUnauthorized  %+v", 401, o.Payload)
}

func (o *PutCallbacksIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutCallbacksIDNotFound creates a PutCallbacksIDNotFound with default headers values
func NewPutCallbacksIDNotFound() *PutCallbacksIDNotFound {
	return &PutCallbacksIDNotFound{}
}

/*PutCallbacksIDNotFound handles this case with default header values.

Request denied as the requested resource does not exist.
*/
type PutCallbacksIDNotFound struct {
	Payload PutCallbacksIDNotFoundBody
}

func (o *PutCallbacksIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /callbacks/{id}][%d] putCallbacksIdNotFound  %+v", 404, o.Payload)
}

func (o *PutCallbacksIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutCallbacksIDInternalServerError creates a PutCallbacksIDInternalServerError with default headers values
func NewPutCallbacksIDInternalServerError() *PutCallbacksIDInternalServerError {
	return &PutCallbacksIDInternalServerError{}
}

/*PutCallbacksIDInternalServerError handles this case with default header values.

Request failed due to an internal server error.
*/
type PutCallbacksIDInternalServerError struct {
	Payload PutCallbacksIDInternalServerErrorBody
}

func (o *PutCallbacksIDInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /callbacks/{id}][%d] putCallbacksIdInternalServerError  %+v", 500, o.Payload)
}

func (o *PutCallbacksIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PutCallbacksIDBadRequestBody put callbacks ID bad request body
swagger:model PutCallbacksIDBadRequestBody
*/
type PutCallbacksIDBadRequestBody struct {

	// Explanation of the errors
	// Required: true
	Message []string `json:"message"`

	// The error type
	// Required: true
	Type *string `json:"type"`
}

// Validate validates this put callbacks ID bad request body
func (o *PutCallbacksIDBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PutCallbacksIDBadRequestBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("putCallbacksIdBadRequest"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

var putCallbacksIdBadRequestBodyTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["bad_request","unauthorized","not_found","internal","invalid_grant","unsupported_grant_type"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		putCallbacksIdBadRequestBodyTypeTypePropEnum = append(putCallbacksIdBadRequestBodyTypeTypePropEnum, v)
	}
}

const (
	// PutCallbacksIDBadRequestBodyTypeBadRequest captures enum value "bad_request"
	PutCallbacksIDBadRequestBodyTypeBadRequest string = "bad_request"
	// PutCallbacksIDBadRequestBodyTypeUnauthorized captures enum value "unauthorized"
	PutCallbacksIDBadRequestBodyTypeUnauthorized string = "unauthorized"
	// PutCallbacksIDBadRequestBodyTypeNotFound captures enum value "not_found"
	PutCallbacksIDBadRequestBodyTypeNotFound string = "not_found"
	// PutCallbacksIDBadRequestBodyTypeInternal captures enum value "internal"
	PutCallbacksIDBadRequestBodyTypeInternal string = "internal"
	// PutCallbacksIDBadRequestBodyTypeInvalidGrant captures enum value "invalid_grant"
	PutCallbacksIDBadRequestBodyTypeInvalidGrant string = "invalid_grant"
	// PutCallbacksIDBadRequestBodyTypeUnsupportedGrantType captures enum value "unsupported_grant_type"
	PutCallbacksIDBadRequestBodyTypeUnsupportedGrantType string = "unsupported_grant_type"
)

// prop value enum
func (o *PutCallbacksIDBadRequestBody) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, putCallbacksIdBadRequestBodyTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (o *PutCallbacksIDBadRequestBody) validateType(formats strfmt.Registry) error {

	if err := validate.Required("putCallbacksIdBadRequest"+"."+"type", "body", o.Type); err != nil {
		return err
	}

	// value enum
	if err := o.validateTypeEnum("putCallbacksIdBadRequest"+"."+"type", "body", *o.Type); err != nil {
		return err
	}

	return nil
}

/*PutCallbacksIDInternalServerErrorBody put callbacks ID internal server error body
swagger:model PutCallbacksIDInternalServerErrorBody
*/
type PutCallbacksIDInternalServerErrorBody struct {

	// Explanation of the errors
	// Required: true
	Message []string `json:"message"`

	// The error type
	// Required: true
	Type *string `json:"type"`
}

// Validate validates this put callbacks ID internal server error body
func (o *PutCallbacksIDInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PutCallbacksIDInternalServerErrorBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("putCallbacksIdInternalServerError"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

var putCallbacksIdInternalServerErrorBodyTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["bad_request","unauthorized","not_found","internal","invalid_grant","unsupported_grant_type"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		putCallbacksIdInternalServerErrorBodyTypeTypePropEnum = append(putCallbacksIdInternalServerErrorBodyTypeTypePropEnum, v)
	}
}

const (
	// PutCallbacksIDInternalServerErrorBodyTypeBadRequest captures enum value "bad_request"
	PutCallbacksIDInternalServerErrorBodyTypeBadRequest string = "bad_request"
	// PutCallbacksIDInternalServerErrorBodyTypeUnauthorized captures enum value "unauthorized"
	PutCallbacksIDInternalServerErrorBodyTypeUnauthorized string = "unauthorized"
	// PutCallbacksIDInternalServerErrorBodyTypeNotFound captures enum value "not_found"
	PutCallbacksIDInternalServerErrorBodyTypeNotFound string = "not_found"
	// PutCallbacksIDInternalServerErrorBodyTypeInternal captures enum value "internal"
	PutCallbacksIDInternalServerErrorBodyTypeInternal string = "internal"
	// PutCallbacksIDInternalServerErrorBodyTypeInvalidGrant captures enum value "invalid_grant"
	PutCallbacksIDInternalServerErrorBodyTypeInvalidGrant string = "invalid_grant"
	// PutCallbacksIDInternalServerErrorBodyTypeUnsupportedGrantType captures enum value "unsupported_grant_type"
	PutCallbacksIDInternalServerErrorBodyTypeUnsupportedGrantType string = "unsupported_grant_type"
)

// prop value enum
func (o *PutCallbacksIDInternalServerErrorBody) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, putCallbacksIdInternalServerErrorBodyTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (o *PutCallbacksIDInternalServerErrorBody) validateType(formats strfmt.Registry) error {

	if err := validate.Required("putCallbacksIdInternalServerError"+"."+"type", "body", o.Type); err != nil {
		return err
	}

	// value enum
	if err := o.validateTypeEnum("putCallbacksIdInternalServerError"+"."+"type", "body", *o.Type); err != nil {
		return err
	}

	return nil
}

/*PutCallbacksIDNotFoundBody put callbacks ID not found body
swagger:model PutCallbacksIDNotFoundBody
*/
type PutCallbacksIDNotFoundBody struct {

	// Explanation of the errors
	// Required: true
	Message []string `json:"message"`

	// The error type
	// Required: true
	Type *string `json:"type"`
}

// Validate validates this put callbacks ID not found body
func (o *PutCallbacksIDNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PutCallbacksIDNotFoundBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("putCallbacksIdNotFound"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

var putCallbacksIdNotFoundBodyTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["bad_request","unauthorized","not_found","internal","invalid_grant","unsupported_grant_type"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		putCallbacksIdNotFoundBodyTypeTypePropEnum = append(putCallbacksIdNotFoundBodyTypeTypePropEnum, v)
	}
}

const (
	// PutCallbacksIDNotFoundBodyTypeBadRequest captures enum value "bad_request"
	PutCallbacksIDNotFoundBodyTypeBadRequest string = "bad_request"
	// PutCallbacksIDNotFoundBodyTypeUnauthorized captures enum value "unauthorized"
	PutCallbacksIDNotFoundBodyTypeUnauthorized string = "unauthorized"
	// PutCallbacksIDNotFoundBodyTypeNotFound captures enum value "not_found"
	PutCallbacksIDNotFoundBodyTypeNotFound string = "not_found"
	// PutCallbacksIDNotFoundBodyTypeInternal captures enum value "internal"
	PutCallbacksIDNotFoundBodyTypeInternal string = "internal"
	// PutCallbacksIDNotFoundBodyTypeInvalidGrant captures enum value "invalid_grant"
	PutCallbacksIDNotFoundBodyTypeInvalidGrant string = "invalid_grant"
	// PutCallbacksIDNotFoundBodyTypeUnsupportedGrantType captures enum value "unsupported_grant_type"
	PutCallbacksIDNotFoundBodyTypeUnsupportedGrantType string = "unsupported_grant_type"
)

// prop value enum
func (o *PutCallbacksIDNotFoundBody) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, putCallbacksIdNotFoundBodyTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (o *PutCallbacksIDNotFoundBody) validateType(formats strfmt.Registry) error {

	if err := validate.Required("putCallbacksIdNotFound"+"."+"type", "body", o.Type); err != nil {
		return err
	}

	// value enum
	if err := o.validateTypeEnum("putCallbacksIdNotFound"+"."+"type", "body", *o.Type); err != nil {
		return err
	}

	return nil
}

/*PutCallbacksIDUnauthorizedBody put callbacks ID unauthorized body
swagger:model PutCallbacksIDUnauthorizedBody
*/
type PutCallbacksIDUnauthorizedBody struct {

	// Explanation of the errors
	// Required: true
	Message []string `json:"message"`

	// The error type
	// Required: true
	Type *string `json:"type"`
}

// Validate validates this put callbacks ID unauthorized body
func (o *PutCallbacksIDUnauthorizedBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PutCallbacksIDUnauthorizedBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("putCallbacksIdUnauthorized"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

var putCallbacksIdUnauthorizedBodyTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["bad_request","unauthorized","not_found","internal","invalid_grant","unsupported_grant_type"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		putCallbacksIdUnauthorizedBodyTypeTypePropEnum = append(putCallbacksIdUnauthorizedBodyTypeTypePropEnum, v)
	}
}

const (
	// PutCallbacksIDUnauthorizedBodyTypeBadRequest captures enum value "bad_request"
	PutCallbacksIDUnauthorizedBodyTypeBadRequest string = "bad_request"
	// PutCallbacksIDUnauthorizedBodyTypeUnauthorized captures enum value "unauthorized"
	PutCallbacksIDUnauthorizedBodyTypeUnauthorized string = "unauthorized"
	// PutCallbacksIDUnauthorizedBodyTypeNotFound captures enum value "not_found"
	PutCallbacksIDUnauthorizedBodyTypeNotFound string = "not_found"
	// PutCallbacksIDUnauthorizedBodyTypeInternal captures enum value "internal"
	PutCallbacksIDUnauthorizedBodyTypeInternal string = "internal"
	// PutCallbacksIDUnauthorizedBodyTypeInvalidGrant captures enum value "invalid_grant"
	PutCallbacksIDUnauthorizedBodyTypeInvalidGrant string = "invalid_grant"
	// PutCallbacksIDUnauthorizedBodyTypeUnsupportedGrantType captures enum value "unsupported_grant_type"
	PutCallbacksIDUnauthorizedBodyTypeUnsupportedGrantType string = "unsupported_grant_type"
)

// prop value enum
func (o *PutCallbacksIDUnauthorizedBody) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, putCallbacksIdUnauthorizedBodyTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (o *PutCallbacksIDUnauthorizedBody) validateType(formats strfmt.Registry) error {

	if err := validate.Required("putCallbacksIdUnauthorized"+"."+"type", "body", o.Type); err != nil {
		return err
	}

	// value enum
	if err := o.validateTypeEnum("putCallbacksIdUnauthorized"+"."+"type", "body", *o.Type); err != nil {
		return err
	}

	return nil
}
