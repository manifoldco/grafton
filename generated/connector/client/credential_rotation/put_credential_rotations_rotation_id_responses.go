package credential_rotation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// PutCredentialRotationsRotationIDReader is a Reader for the PutCredentialRotationsRotationID structure.
type PutCredentialRotationsRotationIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutCredentialRotationsRotationIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 202:
		result := NewPutCredentialRotationsRotationIDAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutCredentialRotationsRotationIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPutCredentialRotationsRotationIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutCredentialRotationsRotationIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPutCredentialRotationsRotationIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutCredentialRotationsRotationIDAccepted creates a PutCredentialRotationsRotationIDAccepted with default headers values
func NewPutCredentialRotationsRotationIDAccepted() *PutCredentialRotationsRotationIDAccepted {
	return &PutCredentialRotationsRotationIDAccepted{}
}

/*PutCredentialRotationsRotationIDAccepted handles this case with default header values.

Acknowledgement of the credential rotation request.

Manifold will start proccessing the request asynchronously.

*/
type PutCredentialRotationsRotationIDAccepted struct {
}

func (o *PutCredentialRotationsRotationIDAccepted) Error() string {
	return fmt.Sprintf("[PUT /credential-rotations/{rotation_id}][%d] putCredentialRotationsRotationIdAccepted ", 202)
}

func (o *PutCredentialRotationsRotationIDAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutCredentialRotationsRotationIDBadRequest creates a PutCredentialRotationsRotationIDBadRequest with default headers values
func NewPutCredentialRotationsRotationIDBadRequest() *PutCredentialRotationsRotationIDBadRequest {
	return &PutCredentialRotationsRotationIDBadRequest{}
}

/*PutCredentialRotationsRotationIDBadRequest handles this case with default header values.

Request denied due to invalid request body, path, or headers.
*/
type PutCredentialRotationsRotationIDBadRequest struct {
	Payload PutCredentialRotationsRotationIDBadRequestBody
}

func (o *PutCredentialRotationsRotationIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /credential-rotations/{rotation_id}][%d] putCredentialRotationsRotationIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutCredentialRotationsRotationIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutCredentialRotationsRotationIDUnauthorized creates a PutCredentialRotationsRotationIDUnauthorized with default headers values
func NewPutCredentialRotationsRotationIDUnauthorized() *PutCredentialRotationsRotationIDUnauthorized {
	return &PutCredentialRotationsRotationIDUnauthorized{}
}

/*PutCredentialRotationsRotationIDUnauthorized handles this case with default header values.

Request denied as the provided credentials are no longer valid.
*/
type PutCredentialRotationsRotationIDUnauthorized struct {
	Payload PutCredentialRotationsRotationIDUnauthorizedBody
}

func (o *PutCredentialRotationsRotationIDUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /credential-rotations/{rotation_id}][%d] putCredentialRotationsRotationIdUnauthorized  %+v", 401, o.Payload)
}

func (o *PutCredentialRotationsRotationIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutCredentialRotationsRotationIDNotFound creates a PutCredentialRotationsRotationIDNotFound with default headers values
func NewPutCredentialRotationsRotationIDNotFound() *PutCredentialRotationsRotationIDNotFound {
	return &PutCredentialRotationsRotationIDNotFound{}
}

/*PutCredentialRotationsRotationIDNotFound handles this case with default header values.

Request denied as the requested resource does not exist.
*/
type PutCredentialRotationsRotationIDNotFound struct {
	Payload PutCredentialRotationsRotationIDNotFoundBody
}

func (o *PutCredentialRotationsRotationIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /credential-rotations/{rotation_id}][%d] putCredentialRotationsRotationIdNotFound  %+v", 404, o.Payload)
}

func (o *PutCredentialRotationsRotationIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutCredentialRotationsRotationIDInternalServerError creates a PutCredentialRotationsRotationIDInternalServerError with default headers values
func NewPutCredentialRotationsRotationIDInternalServerError() *PutCredentialRotationsRotationIDInternalServerError {
	return &PutCredentialRotationsRotationIDInternalServerError{}
}

/*PutCredentialRotationsRotationIDInternalServerError handles this case with default header values.

Request failed due to an internal server error.
*/
type PutCredentialRotationsRotationIDInternalServerError struct {
	Payload PutCredentialRotationsRotationIDInternalServerErrorBody
}

func (o *PutCredentialRotationsRotationIDInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /credential-rotations/{rotation_id}][%d] putCredentialRotationsRotationIdInternalServerError  %+v", 500, o.Payload)
}

func (o *PutCredentialRotationsRotationIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PutCredentialRotationsRotationIDBadRequestBody put credential rotations rotation ID bad request body
swagger:model PutCredentialRotationsRotationIDBadRequestBody
*/
type PutCredentialRotationsRotationIDBadRequestBody struct {

	// Explanation of the errors
	// Required: true
	Message []string `json:"message"`

	// The error type
	// Required: true
	Type *string `json:"type"`
}

// Validate validates this put credential rotations rotation ID bad request body
func (o *PutCredentialRotationsRotationIDBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PutCredentialRotationsRotationIDBadRequestBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("putCredentialRotationsRotationIdBadRequest"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

var putCredentialRotationsRotationIdBadRequestBodyTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["bad_request","unauthorized","not_found","internal","invalid_grant","unsupported_grant_type"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		putCredentialRotationsRotationIdBadRequestBodyTypeTypePropEnum = append(putCredentialRotationsRotationIdBadRequestBodyTypeTypePropEnum, v)
	}
}

const (
	// PutCredentialRotationsRotationIDBadRequestBodyTypeBadRequest captures enum value "bad_request"
	PutCredentialRotationsRotationIDBadRequestBodyTypeBadRequest string = "bad_request"
	// PutCredentialRotationsRotationIDBadRequestBodyTypeUnauthorized captures enum value "unauthorized"
	PutCredentialRotationsRotationIDBadRequestBodyTypeUnauthorized string = "unauthorized"
	// PutCredentialRotationsRotationIDBadRequestBodyTypeNotFound captures enum value "not_found"
	PutCredentialRotationsRotationIDBadRequestBodyTypeNotFound string = "not_found"
	// PutCredentialRotationsRotationIDBadRequestBodyTypeInternal captures enum value "internal"
	PutCredentialRotationsRotationIDBadRequestBodyTypeInternal string = "internal"
	// PutCredentialRotationsRotationIDBadRequestBodyTypeInvalidGrant captures enum value "invalid_grant"
	PutCredentialRotationsRotationIDBadRequestBodyTypeInvalidGrant string = "invalid_grant"
	// PutCredentialRotationsRotationIDBadRequestBodyTypeUnsupportedGrantType captures enum value "unsupported_grant_type"
	PutCredentialRotationsRotationIDBadRequestBodyTypeUnsupportedGrantType string = "unsupported_grant_type"
)

// prop value enum
func (o *PutCredentialRotationsRotationIDBadRequestBody) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, putCredentialRotationsRotationIdBadRequestBodyTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (o *PutCredentialRotationsRotationIDBadRequestBody) validateType(formats strfmt.Registry) error {

	if err := validate.Required("putCredentialRotationsRotationIdBadRequest"+"."+"type", "body", o.Type); err != nil {
		return err
	}

	// value enum
	if err := o.validateTypeEnum("putCredentialRotationsRotationIdBadRequest"+"."+"type", "body", *o.Type); err != nil {
		return err
	}

	return nil
}

/*PutCredentialRotationsRotationIDInternalServerErrorBody put credential rotations rotation ID internal server error body
swagger:model PutCredentialRotationsRotationIDInternalServerErrorBody
*/
type PutCredentialRotationsRotationIDInternalServerErrorBody struct {

	// Explanation of the errors
	// Required: true
	Message []string `json:"message"`

	// The error type
	// Required: true
	Type *string `json:"type"`
}

// Validate validates this put credential rotations rotation ID internal server error body
func (o *PutCredentialRotationsRotationIDInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PutCredentialRotationsRotationIDInternalServerErrorBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("putCredentialRotationsRotationIdInternalServerError"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

var putCredentialRotationsRotationIdInternalServerErrorBodyTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["bad_request","unauthorized","not_found","internal","invalid_grant","unsupported_grant_type"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		putCredentialRotationsRotationIdInternalServerErrorBodyTypeTypePropEnum = append(putCredentialRotationsRotationIdInternalServerErrorBodyTypeTypePropEnum, v)
	}
}

const (
	// PutCredentialRotationsRotationIDInternalServerErrorBodyTypeBadRequest captures enum value "bad_request"
	PutCredentialRotationsRotationIDInternalServerErrorBodyTypeBadRequest string = "bad_request"
	// PutCredentialRotationsRotationIDInternalServerErrorBodyTypeUnauthorized captures enum value "unauthorized"
	PutCredentialRotationsRotationIDInternalServerErrorBodyTypeUnauthorized string = "unauthorized"
	// PutCredentialRotationsRotationIDInternalServerErrorBodyTypeNotFound captures enum value "not_found"
	PutCredentialRotationsRotationIDInternalServerErrorBodyTypeNotFound string = "not_found"
	// PutCredentialRotationsRotationIDInternalServerErrorBodyTypeInternal captures enum value "internal"
	PutCredentialRotationsRotationIDInternalServerErrorBodyTypeInternal string = "internal"
	// PutCredentialRotationsRotationIDInternalServerErrorBodyTypeInvalidGrant captures enum value "invalid_grant"
	PutCredentialRotationsRotationIDInternalServerErrorBodyTypeInvalidGrant string = "invalid_grant"
	// PutCredentialRotationsRotationIDInternalServerErrorBodyTypeUnsupportedGrantType captures enum value "unsupported_grant_type"
	PutCredentialRotationsRotationIDInternalServerErrorBodyTypeUnsupportedGrantType string = "unsupported_grant_type"
)

// prop value enum
func (o *PutCredentialRotationsRotationIDInternalServerErrorBody) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, putCredentialRotationsRotationIdInternalServerErrorBodyTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (o *PutCredentialRotationsRotationIDInternalServerErrorBody) validateType(formats strfmt.Registry) error {

	if err := validate.Required("putCredentialRotationsRotationIdInternalServerError"+"."+"type", "body", o.Type); err != nil {
		return err
	}

	// value enum
	if err := o.validateTypeEnum("putCredentialRotationsRotationIdInternalServerError"+"."+"type", "body", *o.Type); err != nil {
		return err
	}

	return nil
}

/*PutCredentialRotationsRotationIDNotFoundBody put credential rotations rotation ID not found body
swagger:model PutCredentialRotationsRotationIDNotFoundBody
*/
type PutCredentialRotationsRotationIDNotFoundBody struct {

	// Explanation of the errors
	// Required: true
	Message []string `json:"message"`

	// The error type
	// Required: true
	Type *string `json:"type"`
}

// Validate validates this put credential rotations rotation ID not found body
func (o *PutCredentialRotationsRotationIDNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PutCredentialRotationsRotationIDNotFoundBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("putCredentialRotationsRotationIdNotFound"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

var putCredentialRotationsRotationIdNotFoundBodyTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["bad_request","unauthorized","not_found","internal","invalid_grant","unsupported_grant_type"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		putCredentialRotationsRotationIdNotFoundBodyTypeTypePropEnum = append(putCredentialRotationsRotationIdNotFoundBodyTypeTypePropEnum, v)
	}
}

const (
	// PutCredentialRotationsRotationIDNotFoundBodyTypeBadRequest captures enum value "bad_request"
	PutCredentialRotationsRotationIDNotFoundBodyTypeBadRequest string = "bad_request"
	// PutCredentialRotationsRotationIDNotFoundBodyTypeUnauthorized captures enum value "unauthorized"
	PutCredentialRotationsRotationIDNotFoundBodyTypeUnauthorized string = "unauthorized"
	// PutCredentialRotationsRotationIDNotFoundBodyTypeNotFound captures enum value "not_found"
	PutCredentialRotationsRotationIDNotFoundBodyTypeNotFound string = "not_found"
	// PutCredentialRotationsRotationIDNotFoundBodyTypeInternal captures enum value "internal"
	PutCredentialRotationsRotationIDNotFoundBodyTypeInternal string = "internal"
	// PutCredentialRotationsRotationIDNotFoundBodyTypeInvalidGrant captures enum value "invalid_grant"
	PutCredentialRotationsRotationIDNotFoundBodyTypeInvalidGrant string = "invalid_grant"
	// PutCredentialRotationsRotationIDNotFoundBodyTypeUnsupportedGrantType captures enum value "unsupported_grant_type"
	PutCredentialRotationsRotationIDNotFoundBodyTypeUnsupportedGrantType string = "unsupported_grant_type"
)

// prop value enum
func (o *PutCredentialRotationsRotationIDNotFoundBody) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, putCredentialRotationsRotationIdNotFoundBodyTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (o *PutCredentialRotationsRotationIDNotFoundBody) validateType(formats strfmt.Registry) error {

	if err := validate.Required("putCredentialRotationsRotationIdNotFound"+"."+"type", "body", o.Type); err != nil {
		return err
	}

	// value enum
	if err := o.validateTypeEnum("putCredentialRotationsRotationIdNotFound"+"."+"type", "body", *o.Type); err != nil {
		return err
	}

	return nil
}

/*PutCredentialRotationsRotationIDUnauthorizedBody put credential rotations rotation ID unauthorized body
swagger:model PutCredentialRotationsRotationIDUnauthorizedBody
*/
type PutCredentialRotationsRotationIDUnauthorizedBody struct {

	// Explanation of the errors
	// Required: true
	Message []string `json:"message"`

	// The error type
	// Required: true
	Type *string `json:"type"`
}

// Validate validates this put credential rotations rotation ID unauthorized body
func (o *PutCredentialRotationsRotationIDUnauthorizedBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PutCredentialRotationsRotationIDUnauthorizedBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("putCredentialRotationsRotationIdUnauthorized"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

var putCredentialRotationsRotationIdUnauthorizedBodyTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["bad_request","unauthorized","not_found","internal","invalid_grant","unsupported_grant_type"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		putCredentialRotationsRotationIdUnauthorizedBodyTypeTypePropEnum = append(putCredentialRotationsRotationIdUnauthorizedBodyTypeTypePropEnum, v)
	}
}

const (
	// PutCredentialRotationsRotationIDUnauthorizedBodyTypeBadRequest captures enum value "bad_request"
	PutCredentialRotationsRotationIDUnauthorizedBodyTypeBadRequest string = "bad_request"
	// PutCredentialRotationsRotationIDUnauthorizedBodyTypeUnauthorized captures enum value "unauthorized"
	PutCredentialRotationsRotationIDUnauthorizedBodyTypeUnauthorized string = "unauthorized"
	// PutCredentialRotationsRotationIDUnauthorizedBodyTypeNotFound captures enum value "not_found"
	PutCredentialRotationsRotationIDUnauthorizedBodyTypeNotFound string = "not_found"
	// PutCredentialRotationsRotationIDUnauthorizedBodyTypeInternal captures enum value "internal"
	PutCredentialRotationsRotationIDUnauthorizedBodyTypeInternal string = "internal"
	// PutCredentialRotationsRotationIDUnauthorizedBodyTypeInvalidGrant captures enum value "invalid_grant"
	PutCredentialRotationsRotationIDUnauthorizedBodyTypeInvalidGrant string = "invalid_grant"
	// PutCredentialRotationsRotationIDUnauthorizedBodyTypeUnsupportedGrantType captures enum value "unsupported_grant_type"
	PutCredentialRotationsRotationIDUnauthorizedBodyTypeUnsupportedGrantType string = "unsupported_grant_type"
)

// prop value enum
func (o *PutCredentialRotationsRotationIDUnauthorizedBody) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, putCredentialRotationsRotationIdUnauthorizedBodyTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (o *PutCredentialRotationsRotationIDUnauthorizedBody) validateType(formats strfmt.Registry) error {

	if err := validate.Required("putCredentialRotationsRotationIdUnauthorized"+"."+"type", "body", o.Type); err != nil {
		return err
	}

	// value enum
	if err := o.validateTypeEnum("putCredentialRotationsRotationIdUnauthorized"+"."+"type", "body", *o.Type); err != nil {
		return err
	}

	return nil
}
