package o_auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/manifoldco/grafton/generated/connector/models"
)

// NewPostOauthTokensParams creates a new PostOauthTokensParams object
// with the default values initialized.
func NewPostOauthTokensParams() *PostOauthTokensParams {
	var ()
	return &PostOauthTokensParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostOauthTokensParamsWithTimeout creates a new PostOauthTokensParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostOauthTokensParamsWithTimeout(timeout time.Duration) *PostOauthTokensParams {
	var ()
	return &PostOauthTokensParams{

		timeout: timeout,
	}
}

// NewPostOauthTokensParamsWithContext creates a new PostOauthTokensParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostOauthTokensParamsWithContext(ctx context.Context) *PostOauthTokensParams {
	var ()
	return &PostOauthTokensParams{

		Context: ctx,
	}
}

// NewPostOauthTokensParamsWithHTTPClient creates a new PostOauthTokensParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostOauthTokensParamsWithHTTPClient(client *http.Client) *PostOauthTokensParams {
	var ()
	return &PostOauthTokensParams{
		HTTPClient: client,
	}
}

/*PostOauthTokensParams contains all the parameters to send to the API endpoint
for the post oauth tokens operation typically these are written to a http.Request
*/
type PostOauthTokensParams struct {

	/*Authorization
	  Authorization header for basic access authentication containing the
	OAuth2 `client_id` as user name, and OAuth2 `client_secret` as
	password. The `client_id` and `client_secret` may be passed either
	in the body of the request, or in this header.

	Using this header is the **preferred** way to transmit `client_id`
	and `client_secret`.


	*/
	Authorization *string
	/*Body
	  OAuth Access Token Request Body

	*/
	Body models.AccessTokenRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post oauth tokens params
func (o *PostOauthTokensParams) WithTimeout(timeout time.Duration) *PostOauthTokensParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post oauth tokens params
func (o *PostOauthTokensParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post oauth tokens params
func (o *PostOauthTokensParams) WithContext(ctx context.Context) *PostOauthTokensParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post oauth tokens params
func (o *PostOauthTokensParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post oauth tokens params
func (o *PostOauthTokensParams) WithHTTPClient(client *http.Client) *PostOauthTokensParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post oauth tokens params
func (o *PostOauthTokensParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the post oauth tokens params
func (o *PostOauthTokensParams) WithAuthorization(authorization *string) *PostOauthTokensParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the post oauth tokens params
func (o *PostOauthTokensParams) SetAuthorization(authorization *string) {
	o.Authorization = authorization
}

// WithBody adds the body to the post oauth tokens params
func (o *PostOauthTokensParams) WithBody(body models.AccessTokenRequest) *PostOauthTokensParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the post oauth tokens params
func (o *PostOauthTokensParams) SetBody(body models.AccessTokenRequest) {
	o.Body = body
}

// WriteToRequest writes these params to a swagger request
func (o *PostOauthTokensParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Authorization != nil {

		// header param Authorization
		if err := r.SetHeaderParam("Authorization", *o.Authorization); err != nil {
			return err
		}

	}

	if err := r.SetBodyParam(o.Body); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
