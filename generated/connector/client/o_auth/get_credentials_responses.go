package o_auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/manifoldco/grafton/generated/connector/models"
)

// GetCredentialsReader is a Reader for the GetCredentials structure.
type GetCredentialsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCredentialsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCredentialsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetCredentialsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetCredentialsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetCredentialsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCredentialsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCredentialsOK creates a GetCredentialsOK with default headers values
func NewGetCredentialsOK() *GetCredentialsOK {
	return &GetCredentialsOK{}
}

/*GetCredentialsOK handles this case with default header values.

List of OAuth 2.0 credentials.
*/
type GetCredentialsOK struct {
	Payload []*models.OAuthCredentialGetResponse
}

func (o *GetCredentialsOK) Error() string {
	return fmt.Sprintf("[GET /credentials/][%d] getCredentialsOK  %+v", 200, o.Payload)
}

func (o *GetCredentialsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCredentialsBadRequest creates a GetCredentialsBadRequest with default headers values
func NewGetCredentialsBadRequest() *GetCredentialsBadRequest {
	return &GetCredentialsBadRequest{}
}

/*GetCredentialsBadRequest handles this case with default header values.

Request denied due to invalid request body, path, or headers.
*/
type GetCredentialsBadRequest struct {
	Payload GetCredentialsBadRequestBody
}

func (o *GetCredentialsBadRequest) Error() string {
	return fmt.Sprintf("[GET /credentials/][%d] getCredentialsBadRequest  %+v", 400, o.Payload)
}

func (o *GetCredentialsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCredentialsUnauthorized creates a GetCredentialsUnauthorized with default headers values
func NewGetCredentialsUnauthorized() *GetCredentialsUnauthorized {
	return &GetCredentialsUnauthorized{}
}

/*GetCredentialsUnauthorized handles this case with default header values.

Request denied as the provided credentials are no longer valid.
*/
type GetCredentialsUnauthorized struct {
	Payload GetCredentialsUnauthorizedBody
}

func (o *GetCredentialsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /credentials/][%d] getCredentialsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCredentialsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCredentialsNotFound creates a GetCredentialsNotFound with default headers values
func NewGetCredentialsNotFound() *GetCredentialsNotFound {
	return &GetCredentialsNotFound{}
}

/*GetCredentialsNotFound handles this case with default header values.

Request denied as the requested resource does not exist.
*/
type GetCredentialsNotFound struct {
	Payload GetCredentialsNotFoundBody
}

func (o *GetCredentialsNotFound) Error() string {
	return fmt.Sprintf("[GET /credentials/][%d] getCredentialsNotFound  %+v", 404, o.Payload)
}

func (o *GetCredentialsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCredentialsInternalServerError creates a GetCredentialsInternalServerError with default headers values
func NewGetCredentialsInternalServerError() *GetCredentialsInternalServerError {
	return &GetCredentialsInternalServerError{}
}

/*GetCredentialsInternalServerError handles this case with default header values.

Request failed due to an internal server error.
*/
type GetCredentialsInternalServerError struct {
	Payload GetCredentialsInternalServerErrorBody
}

func (o *GetCredentialsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /credentials/][%d] getCredentialsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCredentialsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetCredentialsBadRequestBody get credentials bad request body
swagger:model GetCredentialsBadRequestBody
*/
type GetCredentialsBadRequestBody struct {

	// Explanation of the errors
	// Required: true
	Message []string `json:"message"`

	// The error type
	// Required: true
	Type *string `json:"type"`
}

// Validate validates this get credentials bad request body
func (o *GetCredentialsBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCredentialsBadRequestBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("getCredentialsBadRequest"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

var getCredentialsBadRequestBodyTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["bad_request","unauthorized","not_found","internal","invalid_grant","unsupported_grant_type"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCredentialsBadRequestBodyTypeTypePropEnum = append(getCredentialsBadRequestBodyTypeTypePropEnum, v)
	}
}

const (
	// GetCredentialsBadRequestBodyTypeBadRequest captures enum value "bad_request"
	GetCredentialsBadRequestBodyTypeBadRequest string = "bad_request"
	// GetCredentialsBadRequestBodyTypeUnauthorized captures enum value "unauthorized"
	GetCredentialsBadRequestBodyTypeUnauthorized string = "unauthorized"
	// GetCredentialsBadRequestBodyTypeNotFound captures enum value "not_found"
	GetCredentialsBadRequestBodyTypeNotFound string = "not_found"
	// GetCredentialsBadRequestBodyTypeInternal captures enum value "internal"
	GetCredentialsBadRequestBodyTypeInternal string = "internal"
	// GetCredentialsBadRequestBodyTypeInvalidGrant captures enum value "invalid_grant"
	GetCredentialsBadRequestBodyTypeInvalidGrant string = "invalid_grant"
	// GetCredentialsBadRequestBodyTypeUnsupportedGrantType captures enum value "unsupported_grant_type"
	GetCredentialsBadRequestBodyTypeUnsupportedGrantType string = "unsupported_grant_type"
)

// prop value enum
func (o *GetCredentialsBadRequestBody) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getCredentialsBadRequestBodyTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (o *GetCredentialsBadRequestBody) validateType(formats strfmt.Registry) error {

	if err := validate.Required("getCredentialsBadRequest"+"."+"type", "body", o.Type); err != nil {
		return err
	}

	// value enum
	if err := o.validateTypeEnum("getCredentialsBadRequest"+"."+"type", "body", *o.Type); err != nil {
		return err
	}

	return nil
}

/*GetCredentialsInternalServerErrorBody get credentials internal server error body
swagger:model GetCredentialsInternalServerErrorBody
*/
type GetCredentialsInternalServerErrorBody struct {

	// Explanation of the errors
	// Required: true
	Message []string `json:"message"`

	// The error type
	// Required: true
	Type *string `json:"type"`
}

// Validate validates this get credentials internal server error body
func (o *GetCredentialsInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCredentialsInternalServerErrorBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("getCredentialsInternalServerError"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

var getCredentialsInternalServerErrorBodyTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["bad_request","unauthorized","not_found","internal","invalid_grant","unsupported_grant_type"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCredentialsInternalServerErrorBodyTypeTypePropEnum = append(getCredentialsInternalServerErrorBodyTypeTypePropEnum, v)
	}
}

const (
	// GetCredentialsInternalServerErrorBodyTypeBadRequest captures enum value "bad_request"
	GetCredentialsInternalServerErrorBodyTypeBadRequest string = "bad_request"
	// GetCredentialsInternalServerErrorBodyTypeUnauthorized captures enum value "unauthorized"
	GetCredentialsInternalServerErrorBodyTypeUnauthorized string = "unauthorized"
	// GetCredentialsInternalServerErrorBodyTypeNotFound captures enum value "not_found"
	GetCredentialsInternalServerErrorBodyTypeNotFound string = "not_found"
	// GetCredentialsInternalServerErrorBodyTypeInternal captures enum value "internal"
	GetCredentialsInternalServerErrorBodyTypeInternal string = "internal"
	// GetCredentialsInternalServerErrorBodyTypeInvalidGrant captures enum value "invalid_grant"
	GetCredentialsInternalServerErrorBodyTypeInvalidGrant string = "invalid_grant"
	// GetCredentialsInternalServerErrorBodyTypeUnsupportedGrantType captures enum value "unsupported_grant_type"
	GetCredentialsInternalServerErrorBodyTypeUnsupportedGrantType string = "unsupported_grant_type"
)

// prop value enum
func (o *GetCredentialsInternalServerErrorBody) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getCredentialsInternalServerErrorBodyTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (o *GetCredentialsInternalServerErrorBody) validateType(formats strfmt.Registry) error {

	if err := validate.Required("getCredentialsInternalServerError"+"."+"type", "body", o.Type); err != nil {
		return err
	}

	// value enum
	if err := o.validateTypeEnum("getCredentialsInternalServerError"+"."+"type", "body", *o.Type); err != nil {
		return err
	}

	return nil
}

/*GetCredentialsNotFoundBody get credentials not found body
swagger:model GetCredentialsNotFoundBody
*/
type GetCredentialsNotFoundBody struct {

	// Explanation of the errors
	// Required: true
	Message []string `json:"message"`

	// The error type
	// Required: true
	Type *string `json:"type"`
}

// Validate validates this get credentials not found body
func (o *GetCredentialsNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCredentialsNotFoundBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("getCredentialsNotFound"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

var getCredentialsNotFoundBodyTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["bad_request","unauthorized","not_found","internal","invalid_grant","unsupported_grant_type"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCredentialsNotFoundBodyTypeTypePropEnum = append(getCredentialsNotFoundBodyTypeTypePropEnum, v)
	}
}

const (
	// GetCredentialsNotFoundBodyTypeBadRequest captures enum value "bad_request"
	GetCredentialsNotFoundBodyTypeBadRequest string = "bad_request"
	// GetCredentialsNotFoundBodyTypeUnauthorized captures enum value "unauthorized"
	GetCredentialsNotFoundBodyTypeUnauthorized string = "unauthorized"
	// GetCredentialsNotFoundBodyTypeNotFound captures enum value "not_found"
	GetCredentialsNotFoundBodyTypeNotFound string = "not_found"
	// GetCredentialsNotFoundBodyTypeInternal captures enum value "internal"
	GetCredentialsNotFoundBodyTypeInternal string = "internal"
	// GetCredentialsNotFoundBodyTypeInvalidGrant captures enum value "invalid_grant"
	GetCredentialsNotFoundBodyTypeInvalidGrant string = "invalid_grant"
	// GetCredentialsNotFoundBodyTypeUnsupportedGrantType captures enum value "unsupported_grant_type"
	GetCredentialsNotFoundBodyTypeUnsupportedGrantType string = "unsupported_grant_type"
)

// prop value enum
func (o *GetCredentialsNotFoundBody) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getCredentialsNotFoundBodyTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (o *GetCredentialsNotFoundBody) validateType(formats strfmt.Registry) error {

	if err := validate.Required("getCredentialsNotFound"+"."+"type", "body", o.Type); err != nil {
		return err
	}

	// value enum
	if err := o.validateTypeEnum("getCredentialsNotFound"+"."+"type", "body", *o.Type); err != nil {
		return err
	}

	return nil
}

/*GetCredentialsUnauthorizedBody get credentials unauthorized body
swagger:model GetCredentialsUnauthorizedBody
*/
type GetCredentialsUnauthorizedBody struct {

	// Explanation of the errors
	// Required: true
	Message []string `json:"message"`

	// The error type
	// Required: true
	Type *string `json:"type"`
}

// Validate validates this get credentials unauthorized body
func (o *GetCredentialsUnauthorizedBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCredentialsUnauthorizedBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("getCredentialsUnauthorized"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

var getCredentialsUnauthorizedBodyTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["bad_request","unauthorized","not_found","internal","invalid_grant","unsupported_grant_type"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCredentialsUnauthorizedBodyTypeTypePropEnum = append(getCredentialsUnauthorizedBodyTypeTypePropEnum, v)
	}
}

const (
	// GetCredentialsUnauthorizedBodyTypeBadRequest captures enum value "bad_request"
	GetCredentialsUnauthorizedBodyTypeBadRequest string = "bad_request"
	// GetCredentialsUnauthorizedBodyTypeUnauthorized captures enum value "unauthorized"
	GetCredentialsUnauthorizedBodyTypeUnauthorized string = "unauthorized"
	// GetCredentialsUnauthorizedBodyTypeNotFound captures enum value "not_found"
	GetCredentialsUnauthorizedBodyTypeNotFound string = "not_found"
	// GetCredentialsUnauthorizedBodyTypeInternal captures enum value "internal"
	GetCredentialsUnauthorizedBodyTypeInternal string = "internal"
	// GetCredentialsUnauthorizedBodyTypeInvalidGrant captures enum value "invalid_grant"
	GetCredentialsUnauthorizedBodyTypeInvalidGrant string = "invalid_grant"
	// GetCredentialsUnauthorizedBodyTypeUnsupportedGrantType captures enum value "unsupported_grant_type"
	GetCredentialsUnauthorizedBodyTypeUnsupportedGrantType string = "unsupported_grant_type"
)

// prop value enum
func (o *GetCredentialsUnauthorizedBody) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getCredentialsUnauthorizedBodyTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (o *GetCredentialsUnauthorizedBody) validateType(formats strfmt.Registry) error {

	if err := validate.Required("getCredentialsUnauthorized"+"."+"type", "body", o.Type); err != nil {
		return err
	}

	// value enum
	if err := o.validateTypeEnum("getCredentialsUnauthorized"+"."+"type", "body", *o.Type); err != nil {
		return err
	}

	return nil
}
