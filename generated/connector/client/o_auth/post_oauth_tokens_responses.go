package o_auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/manifoldco/grafton/generated/connector/models"
)

// PostOauthTokensReader is a Reader for the PostOauthTokens structure.
type PostOauthTokensReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostOauthTokensReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostOauthTokensCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostOauthTokensBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostOauthTokensUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPostOauthTokensInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostOauthTokensCreated creates a PostOauthTokensCreated with default headers values
func NewPostOauthTokensCreated() *PostOauthTokensCreated {
	return &PostOauthTokensCreated{}
}

/*PostOauthTokensCreated handles this case with default header values.

An access token has been created
*/
type PostOauthTokensCreated struct {
	Payload *models.AccessToken
}

func (o *PostOauthTokensCreated) Error() string {
	return fmt.Sprintf("[POST /oauth/tokens][%d] postOauthTokensCreated  %+v", 201, o.Payload)
}

func (o *PostOauthTokensCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccessToken)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOauthTokensBadRequest creates a PostOauthTokensBadRequest with default headers values
func NewPostOauthTokensBadRequest() *PostOauthTokensBadRequest {
	return &PostOauthTokensBadRequest{}
}

/*PostOauthTokensBadRequest handles this case with default header values.

Request denied due to invalid request body, path, or headers.
*/
type PostOauthTokensBadRequest struct {
	Payload PostOauthTokensBadRequestBody
}

func (o *PostOauthTokensBadRequest) Error() string {
	return fmt.Sprintf("[POST /oauth/tokens][%d] postOauthTokensBadRequest  %+v", 400, o.Payload)
}

func (o *PostOauthTokensBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOauthTokensUnauthorized creates a PostOauthTokensUnauthorized with default headers values
func NewPostOauthTokensUnauthorized() *PostOauthTokensUnauthorized {
	return &PostOauthTokensUnauthorized{}
}

/*PostOauthTokensUnauthorized handles this case with default header values.

Request denied as the provided credentials are no longer valid.
*/
type PostOauthTokensUnauthorized struct {
	Payload PostOauthTokensUnauthorizedBody
}

func (o *PostOauthTokensUnauthorized) Error() string {
	return fmt.Sprintf("[POST /oauth/tokens][%d] postOauthTokensUnauthorized  %+v", 401, o.Payload)
}

func (o *PostOauthTokensUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOauthTokensInternalServerError creates a PostOauthTokensInternalServerError with default headers values
func NewPostOauthTokensInternalServerError() *PostOauthTokensInternalServerError {
	return &PostOauthTokensInternalServerError{}
}

/*PostOauthTokensInternalServerError handles this case with default header values.

Request failed due to an internal server error.
*/
type PostOauthTokensInternalServerError struct {
	Payload PostOauthTokensInternalServerErrorBody
}

func (o *PostOauthTokensInternalServerError) Error() string {
	return fmt.Sprintf("[POST /oauth/tokens][%d] postOauthTokensInternalServerError  %+v", 500, o.Payload)
}

func (o *PostOauthTokensInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostOauthTokensBadRequestBody post oauth tokens bad request body
swagger:model PostOauthTokensBadRequestBody
*/
type PostOauthTokensBadRequestBody struct {

	// The error type
	// Required: true
	Error *string `json:"error"`

	// Explanation of the error
	// Required: true
	ErrorDescription *string `json:"error_description"`
}

// Validate validates this post oauth tokens bad request body
func (o *PostOauthTokensBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateErrorDescription(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var postOauthTokensBadRequestBodyTypeErrorPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["invalid_request","invalid_client","invalid_grant","unauthorized_client","unsupported_grant_type","invalid_scope","access_denied"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		postOauthTokensBadRequestBodyTypeErrorPropEnum = append(postOauthTokensBadRequestBodyTypeErrorPropEnum, v)
	}
}

const (
	// PostOauthTokensBadRequestBodyErrorInvalidRequest captures enum value "invalid_request"
	PostOauthTokensBadRequestBodyErrorInvalidRequest string = "invalid_request"
	// PostOauthTokensBadRequestBodyErrorInvalidClient captures enum value "invalid_client"
	PostOauthTokensBadRequestBodyErrorInvalidClient string = "invalid_client"
	// PostOauthTokensBadRequestBodyErrorInvalidGrant captures enum value "invalid_grant"
	PostOauthTokensBadRequestBodyErrorInvalidGrant string = "invalid_grant"
	// PostOauthTokensBadRequestBodyErrorUnauthorizedClient captures enum value "unauthorized_client"
	PostOauthTokensBadRequestBodyErrorUnauthorizedClient string = "unauthorized_client"
	// PostOauthTokensBadRequestBodyErrorUnsupportedGrantType captures enum value "unsupported_grant_type"
	PostOauthTokensBadRequestBodyErrorUnsupportedGrantType string = "unsupported_grant_type"
	// PostOauthTokensBadRequestBodyErrorInvalidScope captures enum value "invalid_scope"
	PostOauthTokensBadRequestBodyErrorInvalidScope string = "invalid_scope"
	// PostOauthTokensBadRequestBodyErrorAccessDenied captures enum value "access_denied"
	PostOauthTokensBadRequestBodyErrorAccessDenied string = "access_denied"
)

// prop value enum
func (o *PostOauthTokensBadRequestBody) validateErrorEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, postOauthTokensBadRequestBodyTypeErrorPropEnum); err != nil {
		return err
	}
	return nil
}

func (o *PostOauthTokensBadRequestBody) validateError(formats strfmt.Registry) error {

	if err := validate.Required("postOauthTokensBadRequest"+"."+"error", "body", o.Error); err != nil {
		return err
	}

	// value enum
	if err := o.validateErrorEnum("postOauthTokensBadRequest"+"."+"error", "body", *o.Error); err != nil {
		return err
	}

	return nil
}

func (o *PostOauthTokensBadRequestBody) validateErrorDescription(formats strfmt.Registry) error {

	if err := validate.Required("postOauthTokensBadRequest"+"."+"error_description", "body", o.ErrorDescription); err != nil {
		return err
	}

	return nil
}

/*PostOauthTokensInternalServerErrorBody post oauth tokens internal server error body
swagger:model PostOauthTokensInternalServerErrorBody
*/
type PostOauthTokensInternalServerErrorBody struct {

	// Explanation of the errors
	// Required: true
	Message []string `json:"message"`

	// The error type
	// Required: true
	Type *string `json:"type"`
}

// Validate validates this post oauth tokens internal server error body
func (o *PostOauthTokensInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostOauthTokensInternalServerErrorBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("postOauthTokensInternalServerError"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

var postOauthTokensInternalServerErrorBodyTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["bad_request","unauthorized","not_found","internal","invalid_grant","unsupported_grant_type"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		postOauthTokensInternalServerErrorBodyTypeTypePropEnum = append(postOauthTokensInternalServerErrorBodyTypeTypePropEnum, v)
	}
}

const (
	// PostOauthTokensInternalServerErrorBodyTypeBadRequest captures enum value "bad_request"
	PostOauthTokensInternalServerErrorBodyTypeBadRequest string = "bad_request"
	// PostOauthTokensInternalServerErrorBodyTypeUnauthorized captures enum value "unauthorized"
	PostOauthTokensInternalServerErrorBodyTypeUnauthorized string = "unauthorized"
	// PostOauthTokensInternalServerErrorBodyTypeNotFound captures enum value "not_found"
	PostOauthTokensInternalServerErrorBodyTypeNotFound string = "not_found"
	// PostOauthTokensInternalServerErrorBodyTypeInternal captures enum value "internal"
	PostOauthTokensInternalServerErrorBodyTypeInternal string = "internal"
	// PostOauthTokensInternalServerErrorBodyTypeInvalidGrant captures enum value "invalid_grant"
	PostOauthTokensInternalServerErrorBodyTypeInvalidGrant string = "invalid_grant"
	// PostOauthTokensInternalServerErrorBodyTypeUnsupportedGrantType captures enum value "unsupported_grant_type"
	PostOauthTokensInternalServerErrorBodyTypeUnsupportedGrantType string = "unsupported_grant_type"
)

// prop value enum
func (o *PostOauthTokensInternalServerErrorBody) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, postOauthTokensInternalServerErrorBodyTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (o *PostOauthTokensInternalServerErrorBody) validateType(formats strfmt.Registry) error {

	if err := validate.Required("postOauthTokensInternalServerError"+"."+"type", "body", o.Type); err != nil {
		return err
	}

	// value enum
	if err := o.validateTypeEnum("postOauthTokensInternalServerError"+"."+"type", "body", *o.Type); err != nil {
		return err
	}

	return nil
}

/*PostOauthTokensUnauthorizedBody post oauth tokens unauthorized body
swagger:model PostOauthTokensUnauthorizedBody
*/
type PostOauthTokensUnauthorizedBody struct {

	// The error type
	// Required: true
	Error *string `json:"error"`

	// Explanation of the error
	// Required: true
	ErrorDescription *string `json:"error_description"`
}

// Validate validates this post oauth tokens unauthorized body
func (o *PostOauthTokensUnauthorizedBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateErrorDescription(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var postOauthTokensUnauthorizedBodyTypeErrorPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["invalid_request","invalid_client","invalid_grant","unauthorized_client","unsupported_grant_type","invalid_scope","access_denied"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		postOauthTokensUnauthorizedBodyTypeErrorPropEnum = append(postOauthTokensUnauthorizedBodyTypeErrorPropEnum, v)
	}
}

const (
	// PostOauthTokensUnauthorizedBodyErrorInvalidRequest captures enum value "invalid_request"
	PostOauthTokensUnauthorizedBodyErrorInvalidRequest string = "invalid_request"
	// PostOauthTokensUnauthorizedBodyErrorInvalidClient captures enum value "invalid_client"
	PostOauthTokensUnauthorizedBodyErrorInvalidClient string = "invalid_client"
	// PostOauthTokensUnauthorizedBodyErrorInvalidGrant captures enum value "invalid_grant"
	PostOauthTokensUnauthorizedBodyErrorInvalidGrant string = "invalid_grant"
	// PostOauthTokensUnauthorizedBodyErrorUnauthorizedClient captures enum value "unauthorized_client"
	PostOauthTokensUnauthorizedBodyErrorUnauthorizedClient string = "unauthorized_client"
	// PostOauthTokensUnauthorizedBodyErrorUnsupportedGrantType captures enum value "unsupported_grant_type"
	PostOauthTokensUnauthorizedBodyErrorUnsupportedGrantType string = "unsupported_grant_type"
	// PostOauthTokensUnauthorizedBodyErrorInvalidScope captures enum value "invalid_scope"
	PostOauthTokensUnauthorizedBodyErrorInvalidScope string = "invalid_scope"
	// PostOauthTokensUnauthorizedBodyErrorAccessDenied captures enum value "access_denied"
	PostOauthTokensUnauthorizedBodyErrorAccessDenied string = "access_denied"
)

// prop value enum
func (o *PostOauthTokensUnauthorizedBody) validateErrorEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, postOauthTokensUnauthorizedBodyTypeErrorPropEnum); err != nil {
		return err
	}
	return nil
}

func (o *PostOauthTokensUnauthorizedBody) validateError(formats strfmt.Registry) error {

	if err := validate.Required("postOauthTokensUnauthorized"+"."+"error", "body", o.Error); err != nil {
		return err
	}

	// value enum
	if err := o.validateErrorEnum("postOauthTokensUnauthorized"+"."+"error", "body", *o.Error); err != nil {
		return err
	}

	return nil
}

func (o *PostOauthTokensUnauthorizedBody) validateErrorDescription(formats strfmt.Registry) error {

	if err := validate.Required("postOauthTokensUnauthorized"+"."+"error_description", "body", o.ErrorDescription); err != nil {
		return err
	}

	return nil
}
