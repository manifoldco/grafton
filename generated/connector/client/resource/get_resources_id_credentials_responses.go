package resource

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/manifoldco/grafton/generated/connector/models"
)

// GetResourcesIDCredentialsReader is a Reader for the GetResourcesIDCredentials structure.
type GetResourcesIDCredentialsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResourcesIDCredentialsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetResourcesIDCredentialsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetResourcesIDCredentialsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetResourcesIDCredentialsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetResourcesIDCredentialsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetResourcesIDCredentialsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetResourcesIDCredentialsOK creates a GetResourcesIDCredentialsOK with default headers values
func NewGetResourcesIDCredentialsOK() *GetResourcesIDCredentialsOK {
	return &GetResourcesIDCredentialsOK{}
}

/*GetResourcesIDCredentialsOK handles this case with default header values.

A list of credentials from the Resource.
*/
type GetResourcesIDCredentialsOK struct {
	Payload []*models.ResourceCredentials
}

func (o *GetResourcesIDCredentialsOK) Error() string {
	return fmt.Sprintf("[GET /resources/{id}/credentials][%d] getResourcesIdCredentialsOK  %+v", 200, o.Payload)
}

func (o *GetResourcesIDCredentialsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourcesIDCredentialsBadRequest creates a GetResourcesIDCredentialsBadRequest with default headers values
func NewGetResourcesIDCredentialsBadRequest() *GetResourcesIDCredentialsBadRequest {
	return &GetResourcesIDCredentialsBadRequest{}
}

/*GetResourcesIDCredentialsBadRequest handles this case with default header values.

Request denied due to invalid request body, path, or headers.
*/
type GetResourcesIDCredentialsBadRequest struct {
	Payload GetResourcesIDCredentialsBadRequestBody
}

func (o *GetResourcesIDCredentialsBadRequest) Error() string {
	return fmt.Sprintf("[GET /resources/{id}/credentials][%d] getResourcesIdCredentialsBadRequest  %+v", 400, o.Payload)
}

func (o *GetResourcesIDCredentialsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourcesIDCredentialsUnauthorized creates a GetResourcesIDCredentialsUnauthorized with default headers values
func NewGetResourcesIDCredentialsUnauthorized() *GetResourcesIDCredentialsUnauthorized {
	return &GetResourcesIDCredentialsUnauthorized{}
}

/*GetResourcesIDCredentialsUnauthorized handles this case with default header values.

Request denied as the provided credentials are no longer valid.
*/
type GetResourcesIDCredentialsUnauthorized struct {
	Payload GetResourcesIDCredentialsUnauthorizedBody
}

func (o *GetResourcesIDCredentialsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /resources/{id}/credentials][%d] getResourcesIdCredentialsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetResourcesIDCredentialsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourcesIDCredentialsNotFound creates a GetResourcesIDCredentialsNotFound with default headers values
func NewGetResourcesIDCredentialsNotFound() *GetResourcesIDCredentialsNotFound {
	return &GetResourcesIDCredentialsNotFound{}
}

/*GetResourcesIDCredentialsNotFound handles this case with default header values.

Request denied as the requested resource does not exist.
*/
type GetResourcesIDCredentialsNotFound struct {
	Payload GetResourcesIDCredentialsNotFoundBody
}

func (o *GetResourcesIDCredentialsNotFound) Error() string {
	return fmt.Sprintf("[GET /resources/{id}/credentials][%d] getResourcesIdCredentialsNotFound  %+v", 404, o.Payload)
}

func (o *GetResourcesIDCredentialsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourcesIDCredentialsInternalServerError creates a GetResourcesIDCredentialsInternalServerError with default headers values
func NewGetResourcesIDCredentialsInternalServerError() *GetResourcesIDCredentialsInternalServerError {
	return &GetResourcesIDCredentialsInternalServerError{}
}

/*GetResourcesIDCredentialsInternalServerError handles this case with default header values.

Request failed due to an internal server error.
*/
type GetResourcesIDCredentialsInternalServerError struct {
	Payload GetResourcesIDCredentialsInternalServerErrorBody
}

func (o *GetResourcesIDCredentialsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /resources/{id}/credentials][%d] getResourcesIdCredentialsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetResourcesIDCredentialsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetResourcesIDCredentialsBadRequestBody get resources ID credentials bad request body
swagger:model GetResourcesIDCredentialsBadRequestBody
*/
type GetResourcesIDCredentialsBadRequestBody struct {

	// Explanation of the errors
	// Required: true
	Message []string `json:"message"`

	// The error type
	// Required: true
	Type *string `json:"type"`
}

// Validate validates this get resources ID credentials bad request body
func (o *GetResourcesIDCredentialsBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetResourcesIDCredentialsBadRequestBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("getResourcesIdCredentialsBadRequest"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

var getResourcesIdCredentialsBadRequestBodyTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["bad_request","unauthorized","not_found","internal","invalid_grant","unsupported_grant_type"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getResourcesIdCredentialsBadRequestBodyTypeTypePropEnum = append(getResourcesIdCredentialsBadRequestBodyTypeTypePropEnum, v)
	}
}

const (
	// GetResourcesIDCredentialsBadRequestBodyTypeBadRequest captures enum value "bad_request"
	GetResourcesIDCredentialsBadRequestBodyTypeBadRequest string = "bad_request"
	// GetResourcesIDCredentialsBadRequestBodyTypeUnauthorized captures enum value "unauthorized"
	GetResourcesIDCredentialsBadRequestBodyTypeUnauthorized string = "unauthorized"
	// GetResourcesIDCredentialsBadRequestBodyTypeNotFound captures enum value "not_found"
	GetResourcesIDCredentialsBadRequestBodyTypeNotFound string = "not_found"
	// GetResourcesIDCredentialsBadRequestBodyTypeInternal captures enum value "internal"
	GetResourcesIDCredentialsBadRequestBodyTypeInternal string = "internal"
	// GetResourcesIDCredentialsBadRequestBodyTypeInvalidGrant captures enum value "invalid_grant"
	GetResourcesIDCredentialsBadRequestBodyTypeInvalidGrant string = "invalid_grant"
	// GetResourcesIDCredentialsBadRequestBodyTypeUnsupportedGrantType captures enum value "unsupported_grant_type"
	GetResourcesIDCredentialsBadRequestBodyTypeUnsupportedGrantType string = "unsupported_grant_type"
)

// prop value enum
func (o *GetResourcesIDCredentialsBadRequestBody) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getResourcesIdCredentialsBadRequestBodyTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (o *GetResourcesIDCredentialsBadRequestBody) validateType(formats strfmt.Registry) error {

	if err := validate.Required("getResourcesIdCredentialsBadRequest"+"."+"type", "body", o.Type); err != nil {
		return err
	}

	// value enum
	if err := o.validateTypeEnum("getResourcesIdCredentialsBadRequest"+"."+"type", "body", *o.Type); err != nil {
		return err
	}

	return nil
}

/*GetResourcesIDCredentialsInternalServerErrorBody get resources ID credentials internal server error body
swagger:model GetResourcesIDCredentialsInternalServerErrorBody
*/
type GetResourcesIDCredentialsInternalServerErrorBody struct {

	// Explanation of the errors
	// Required: true
	Message []string `json:"message"`

	// The error type
	// Required: true
	Type *string `json:"type"`
}

// Validate validates this get resources ID credentials internal server error body
func (o *GetResourcesIDCredentialsInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetResourcesIDCredentialsInternalServerErrorBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("getResourcesIdCredentialsInternalServerError"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

var getResourcesIdCredentialsInternalServerErrorBodyTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["bad_request","unauthorized","not_found","internal","invalid_grant","unsupported_grant_type"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getResourcesIdCredentialsInternalServerErrorBodyTypeTypePropEnum = append(getResourcesIdCredentialsInternalServerErrorBodyTypeTypePropEnum, v)
	}
}

const (
	// GetResourcesIDCredentialsInternalServerErrorBodyTypeBadRequest captures enum value "bad_request"
	GetResourcesIDCredentialsInternalServerErrorBodyTypeBadRequest string = "bad_request"
	// GetResourcesIDCredentialsInternalServerErrorBodyTypeUnauthorized captures enum value "unauthorized"
	GetResourcesIDCredentialsInternalServerErrorBodyTypeUnauthorized string = "unauthorized"
	// GetResourcesIDCredentialsInternalServerErrorBodyTypeNotFound captures enum value "not_found"
	GetResourcesIDCredentialsInternalServerErrorBodyTypeNotFound string = "not_found"
	// GetResourcesIDCredentialsInternalServerErrorBodyTypeInternal captures enum value "internal"
	GetResourcesIDCredentialsInternalServerErrorBodyTypeInternal string = "internal"
	// GetResourcesIDCredentialsInternalServerErrorBodyTypeInvalidGrant captures enum value "invalid_grant"
	GetResourcesIDCredentialsInternalServerErrorBodyTypeInvalidGrant string = "invalid_grant"
	// GetResourcesIDCredentialsInternalServerErrorBodyTypeUnsupportedGrantType captures enum value "unsupported_grant_type"
	GetResourcesIDCredentialsInternalServerErrorBodyTypeUnsupportedGrantType string = "unsupported_grant_type"
)

// prop value enum
func (o *GetResourcesIDCredentialsInternalServerErrorBody) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getResourcesIdCredentialsInternalServerErrorBodyTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (o *GetResourcesIDCredentialsInternalServerErrorBody) validateType(formats strfmt.Registry) error {

	if err := validate.Required("getResourcesIdCredentialsInternalServerError"+"."+"type", "body", o.Type); err != nil {
		return err
	}

	// value enum
	if err := o.validateTypeEnum("getResourcesIdCredentialsInternalServerError"+"."+"type", "body", *o.Type); err != nil {
		return err
	}

	return nil
}

/*GetResourcesIDCredentialsNotFoundBody get resources ID credentials not found body
swagger:model GetResourcesIDCredentialsNotFoundBody
*/
type GetResourcesIDCredentialsNotFoundBody struct {

	// Explanation of the errors
	// Required: true
	Message []string `json:"message"`

	// The error type
	// Required: true
	Type *string `json:"type"`
}

// Validate validates this get resources ID credentials not found body
func (o *GetResourcesIDCredentialsNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetResourcesIDCredentialsNotFoundBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("getResourcesIdCredentialsNotFound"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

var getResourcesIdCredentialsNotFoundBodyTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["bad_request","unauthorized","not_found","internal","invalid_grant","unsupported_grant_type"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getResourcesIdCredentialsNotFoundBodyTypeTypePropEnum = append(getResourcesIdCredentialsNotFoundBodyTypeTypePropEnum, v)
	}
}

const (
	// GetResourcesIDCredentialsNotFoundBodyTypeBadRequest captures enum value "bad_request"
	GetResourcesIDCredentialsNotFoundBodyTypeBadRequest string = "bad_request"
	// GetResourcesIDCredentialsNotFoundBodyTypeUnauthorized captures enum value "unauthorized"
	GetResourcesIDCredentialsNotFoundBodyTypeUnauthorized string = "unauthorized"
	// GetResourcesIDCredentialsNotFoundBodyTypeNotFound captures enum value "not_found"
	GetResourcesIDCredentialsNotFoundBodyTypeNotFound string = "not_found"
	// GetResourcesIDCredentialsNotFoundBodyTypeInternal captures enum value "internal"
	GetResourcesIDCredentialsNotFoundBodyTypeInternal string = "internal"
	// GetResourcesIDCredentialsNotFoundBodyTypeInvalidGrant captures enum value "invalid_grant"
	GetResourcesIDCredentialsNotFoundBodyTypeInvalidGrant string = "invalid_grant"
	// GetResourcesIDCredentialsNotFoundBodyTypeUnsupportedGrantType captures enum value "unsupported_grant_type"
	GetResourcesIDCredentialsNotFoundBodyTypeUnsupportedGrantType string = "unsupported_grant_type"
)

// prop value enum
func (o *GetResourcesIDCredentialsNotFoundBody) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getResourcesIdCredentialsNotFoundBodyTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (o *GetResourcesIDCredentialsNotFoundBody) validateType(formats strfmt.Registry) error {

	if err := validate.Required("getResourcesIdCredentialsNotFound"+"."+"type", "body", o.Type); err != nil {
		return err
	}

	// value enum
	if err := o.validateTypeEnum("getResourcesIdCredentialsNotFound"+"."+"type", "body", *o.Type); err != nil {
		return err
	}

	return nil
}

/*GetResourcesIDCredentialsUnauthorizedBody get resources ID credentials unauthorized body
swagger:model GetResourcesIDCredentialsUnauthorizedBody
*/
type GetResourcesIDCredentialsUnauthorizedBody struct {

	// Explanation of the errors
	// Required: true
	Message []string `json:"message"`

	// The error type
	// Required: true
	Type *string `json:"type"`
}

// Validate validates this get resources ID credentials unauthorized body
func (o *GetResourcesIDCredentialsUnauthorizedBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetResourcesIDCredentialsUnauthorizedBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("getResourcesIdCredentialsUnauthorized"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

var getResourcesIdCredentialsUnauthorizedBodyTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["bad_request","unauthorized","not_found","internal","invalid_grant","unsupported_grant_type"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getResourcesIdCredentialsUnauthorizedBodyTypeTypePropEnum = append(getResourcesIdCredentialsUnauthorizedBodyTypeTypePropEnum, v)
	}
}

const (
	// GetResourcesIDCredentialsUnauthorizedBodyTypeBadRequest captures enum value "bad_request"
	GetResourcesIDCredentialsUnauthorizedBodyTypeBadRequest string = "bad_request"
	// GetResourcesIDCredentialsUnauthorizedBodyTypeUnauthorized captures enum value "unauthorized"
	GetResourcesIDCredentialsUnauthorizedBodyTypeUnauthorized string = "unauthorized"
	// GetResourcesIDCredentialsUnauthorizedBodyTypeNotFound captures enum value "not_found"
	GetResourcesIDCredentialsUnauthorizedBodyTypeNotFound string = "not_found"
	// GetResourcesIDCredentialsUnauthorizedBodyTypeInternal captures enum value "internal"
	GetResourcesIDCredentialsUnauthorizedBodyTypeInternal string = "internal"
	// GetResourcesIDCredentialsUnauthorizedBodyTypeInvalidGrant captures enum value "invalid_grant"
	GetResourcesIDCredentialsUnauthorizedBodyTypeInvalidGrant string = "invalid_grant"
	// GetResourcesIDCredentialsUnauthorizedBodyTypeUnsupportedGrantType captures enum value "unsupported_grant_type"
	GetResourcesIDCredentialsUnauthorizedBodyTypeUnsupportedGrantType string = "unsupported_grant_type"
)

// prop value enum
func (o *GetResourcesIDCredentialsUnauthorizedBody) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getResourcesIdCredentialsUnauthorizedBodyTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (o *GetResourcesIDCredentialsUnauthorizedBody) validateType(formats strfmt.Registry) error {

	if err := validate.Required("getResourcesIdCredentialsUnauthorized"+"."+"type", "body", o.Type); err != nil {
		return err
	}

	// value enum
	if err := o.validateTypeEnum("getResourcesIdCredentialsUnauthorized"+"."+"type", "body", *o.Type); err != nil {
		return err
	}

	return nil
}
