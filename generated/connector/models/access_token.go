package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// AccessToken A granted access token used for performing requests on behalf o a user
// or provider against the Manifold Connector API.
//
// swagger:model AccessToken
type AccessToken struct {

	// access token
	// Required: true
	// Max Length: 295
	AccessToken *string `json:"access_token"`

	// expires in
	// Required: true
	ExpiresIn *int64 `json:"expires_in"`

	// token type
	// Required: true
	TokenType *string `json:"token_type"`
}

// Validate validates this access token
func (m *AccessToken) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccessToken(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateExpiresIn(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTokenType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AccessToken) validateAccessToken(formats strfmt.Registry) error {

	if err := validate.Required("access_token", "body", m.AccessToken); err != nil {
		return err
	}

	if err := validate.MaxLength("access_token", "body", string(*m.AccessToken), 295); err != nil {
		return err
	}

	return nil
}

func (m *AccessToken) validateExpiresIn(formats strfmt.Registry) error {

	if err := validate.Required("expires_in", "body", m.ExpiresIn); err != nil {
		return err
	}

	return nil
}

var accessTokenTypeTokenTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["bearer"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		accessTokenTypeTokenTypePropEnum = append(accessTokenTypeTokenTypePropEnum, v)
	}
}

const (
	// AccessTokenTokenTypeBearer captures enum value "bearer"
	AccessTokenTokenTypeBearer string = "bearer"
)

// prop value enum
func (m *AccessToken) validateTokenTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, accessTokenTypeTokenTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *AccessToken) validateTokenType(formats strfmt.Registry) error {

	if err := validate.Required("token_type", "body", m.TokenType); err != nil {
		return err
	}

	// value enum
	if err := m.validateTokenTypeEnum("token_type", "body", *m.TokenType); err != nil {
		return err
	}

	return nil
}
