package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"

	manifold "github.com/manifoldco/go-manifold"
)

// ClientCredentials client credentials
// swagger:model client_credentials
type ClientCredentials struct {
	clientIdField manifold.ID

	clientSecretField OAuthClientSecret
}

func (m *ClientCredentials) ClientID() manifold.ID {
	return m.clientIdField
}
func (m *ClientCredentials) SetClientID(val manifold.ID) {
	m.clientIdField = val
}

func (m *ClientCredentials) ClientSecret() OAuthClientSecret {
	return m.clientSecretField
}
func (m *ClientCredentials) SetClientSecret(val OAuthClientSecret) {
	m.clientSecretField = val
}

func (m *ClientCredentials) GrantType() string {
	return "client_credentials"
}
func (m *ClientCredentials) SetGrantType(val string) {

}

// UnmarshalJSON unmarshals this polymorphic type from a JSON structure
func (m *ClientCredentials) UnmarshalJSON(raw []byte) error {
	var data struct {
		ClientID manifold.ID `json:"client_id,omitempty"`

		ClientSecret OAuthClientSecret `json:"client_secret,omitempty"`

		GrantType string `json:"grant_type"`
	}

	buf := bytes.NewBuffer(raw)
	dec := json.NewDecoder(buf)
	dec.UseNumber()

	if err := dec.Decode(&data); err != nil {
		return err
	}

	m.clientIdField = data.ClientID
	m.clientSecretField = data.ClientSecret

	return nil
}

// MarshalJSON marshals this polymorphic type to a JSON structure
func (m ClientCredentials) MarshalJSON() ([]byte, error) {
	var data struct {
		ClientID manifold.ID `json:"client_id,omitempty"`

		ClientSecret OAuthClientSecret `json:"client_secret,omitempty"`

		GrantType string `json:"grant_type"`
	}

	data.ClientID = m.clientIdField
	data.ClientSecret = m.clientSecretField
	data.GrantType = "client_credentials"
	return json.Marshal(data)
}

// Validate validates this client credentials
func (m *ClientCredentials) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClientID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateClientSecret(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ClientCredentials) validateClientID(formats strfmt.Registry) error {

	if swag.IsZero(m.ClientID()) { // not required
		return nil
	}

	if err := m.ClientID().Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("client_id")
		}
		return err
	}

	return nil
}

func (m *ClientCredentials) validateClientSecret(formats strfmt.Registry) error {

	if swag.IsZero(m.ClientSecret()) { // not required
		return nil
	}

	if err := m.ClientSecret().Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("client_secret")
		}
		return err
	}

	return nil
}
