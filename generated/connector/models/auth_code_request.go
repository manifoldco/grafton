package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	manifold "github.com/manifoldco/go-manifold"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// AuthCodeRequest HTTP Request Body of an Auth Code
// swagger:model AuthCodeRequest
type AuthCodeRequest struct {

	// body
	// Required: true
	Body *AuthCodeRequestBody `json:"body"`
}

// Validate validates this auth code request
func (m *AuthCodeRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBody(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AuthCodeRequest) validateBody(formats strfmt.Registry) error {

	if err := validate.Required("body", "body", m.Body); err != nil {
		return err
	}

	if m.Body != nil {

		if err := m.Body.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body")
			}
			return err
		}
	}

	return nil
}

// AuthCodeRequestBody auth code request body
// swagger:model AuthCodeRequestBody
type AuthCodeRequestBody struct {

	// resource id
	// Required: true
	ResourceID manifold.ID `json:"resource_id"`
}

// Validate validates this auth code request body
func (m *AuthCodeRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateResourceID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AuthCodeRequestBody) validateResourceID(formats strfmt.Registry) error {

	if err := m.ResourceID.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("body" + "." + "resource_id")
		}
		return err
	}

	return nil
}
