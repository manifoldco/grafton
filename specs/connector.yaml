swagger: "2.0"
info:
  title: Connector API
  description: |
    # Introduction
    The Connector API allows Providers to query Manifold for data related to
    provisioned resources and users of those resources.

    The API is available at `https://api.connector.manifold.co`.

    # Authentication
    An [OAuth 2.0](https://tools.ietf.org/html/rfc6749) [Bearer
    Token](https://tools.ietf.org/html/rfc6750) is used to authenticate with
    the Connector API. An access token is granted to a provider either by the
    provider themselves or by a user as part of the Single Sign-On flow.

    Requests that require authentication will return `401 Unauthorized`. If the
    requester has insufficient access a `404 Not Found` may be returned instead
    of a `401 Unauthorized`. This is to prevent the accidental leakage of
    private data.

    Access Tokens are valid for 24 hours.

    OAuth Credentials are given to providers by Manifold and are scoped to a
    specific product in the Manifold Catalog. All granted access tokens are
    scoped to the product's credentials.

    To acquire a set of OAuth Credentials please contact [Manifold
    Support](mailto:support@manifold.co).
  version: 1.0.0
host: api.connector.manifold.co
schemes:
- https
produces:
- application/json
consumes:
- application/json
securityDefinitions:
  oauth:
    type: oauth2
    description: Authentication mechanism for external provider services.
    flow: accessCode
    authorizationUrl: https://api.connector.manifold.co/v1/oauth/authorize
    tokenUrl: https://api.connector.manifold.co/v1/oauth/tokens
parameters:
  resource_id:
    name: id
    in: path
    description: |
      ID of a Resource object, stored as a base32 encoded 18 byte identifier.
    required: true
    type: string
    pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$
    format: base32ID
  callback_id:
    name: id
    in: path
    description: |
      ID of a Callback, stored as a base32 encoded 18 byte identifier.
    required: true
    type: string
    pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$
    format: base32ID
responses:
  BadRequest:
    description: Request denied due to invalid request body, path, or headers.
    schema:
      $ref: '#/definitions/Error'
    examples:
      application/json:
        type: bad_request
        message:
        - Invalid Resource ID Provided
  Unauthorized:
    description: Request denied as the provided credentials are no longer valid.
    schema:
      $ref: '#/definitions/Error'
    examples:
      application/json:
        type: invalid_grant
        message:
        - Provided authorization_code is invalid or does not exist.
  NotFound:
    description: Request denied as the requested resource does not exist.
    schema:
      $ref: '#/definitions/Error'
    examples:
      application/json:
        type: not_found
        message:
        - Resource not found
  Internal:
    description: Request failed due to an internal server error.
    schema:
      $ref: '#/definitions/Error'
    examples:
      application/json:
        type: internal
        message:
        - Internal Server Error
  TokenBadRequest:
    description: Request denied due to invalid request body, path, or headers.
    schema:
      $ref: '#/definitions/OAuthError'
    examples:
      application/json:
        error: invalid_grant
        error_description: Provided authorization_code is invalid or does not exist.
  TokenUnauthorized:
    description: Request denied as the provided credentials are no longer valid.
    schema:
      $ref: '#/definitions/OAuthError'
    examples:
      application/json:
        error: invalid_client
        error_description: Provided client_id and client_secret do not match
security:
- oauth: []
basePath: /v1
paths:
  /oauth/tokens:
    x-manifold-audience: provider
    post:
      consumes:
      - application/json
      - application/x-www-form-urlencoded
      summary: Create Access Token
      description: |
        A provider uses this endpoint to acquire a scoped access token which
        grants them authority to act on behalf of the grantor (either a
        provider or user).

        There are two grant types used for requesting an access token:

        * `authorization_code` which allows a provider to exchange a `code`
          grant from a user for an access token giving them permission to act on
          the user's behalf.
        * `client_credentials` which allows a provider to grant themselves an
          access token scoped to a product.

        This endpoint is a part of the Single Sign-On flow invoked by users
        attempting to navigate to a resource's dashboard. A `code` is only
        valid for five minutes and cannot be used more than once to grant an
        access token.

        Provider authentication is supported with `client_id` and
        `client_secret` in either the request body, or via basic authentication.
        Basic authentication is the preferred method, but is not required.

        The granted token will expire within 24 hours.
      tags:
      - OAuth
      security: []
      parameters:
      - name: Authorization
        in: header
        type: string
        format: basic-auth
        pattern: ^Basic [a-zA-Z0-9+/=]{100}$
        minLength: 106
        maxLength: 106
        description: |
          Authorization header for basic access authentication containing the
          OAuth2 `client_id` as user name, and OAuth2 `client_secret` as
          password. The `client_id` and `client_secret` may be passed either
          in the body of the request, or in this header.

          Using this header is the **preferred** way to transmit `client_id`
          and `client_secret`.
      - name: body
        in: body
        description: OAuth Access Token Request Body
        required: true
        schema:
          $ref: '#/definitions/AccessTokenRequest'
      responses:
        201:
          description: An access token has been created
          schema:
            $ref: '#/definitions/AccessToken'
        400:
          $ref: '#/responses/TokenBadRequest'
        401:
          $ref: '#/responses/TokenUnauthorized'
        500:
          $ref: '#/responses/Internal'
  /self:
    x-manifold-audience: provider
    get:
      summary: Current Identity
      description: |
        A provider can call this endpoint to return the identity represented by
        the access token.

        Depending on the grant type used to create an access token the
        underlying identity will be different.

        | Grant Type | Identity Type |
        | ---------- | ------------ |
        | `authorization_code` | `user` |
        | `client_credentials` | `product` |
      tags:
      - OAuth
      responses:
        200:
          description: |
            The identity of the user or product represented by the access
            token.
          schema:
            $ref: '#/definitions/Identity'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        500:
          $ref: '#/responses/Internal'
  /resources/{id}:
    x-manifold-audience: provider
    get:
      summary: Retrieve a Resource
      description: |
        A provider can call this endpoint to return information about a
        specific resource.

        The `product` and `plan` are the machine readable labels which map to
        Product and Plan data inside the Manifold Catalog. The `product` is
        globally unique while the `plan` is unique to the `product`.

        The `region` is the machine readable representation of the platform and
        location in which this resource has been provisioned.
      parameters:
      - $ref: '#/parameters/resource_id'
      tags:
      - Resource
      responses:
        200:
          description: A resource.
          schema:
            $ref: '#/definitions/Resource'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/Internal'
  /resources/{id}/users:
    x-manifold-audience: provider
    get:
      summary: List All Users
      description: |
        A provider can call this endpoint to return a list of all users who
        have access to a specific resource.

        None of this data should be stored as it's non-unique and will change.
        Instead, a provider is required to call this end-point to fetch the
        latest data.
      parameters:
      - $ref: '#/parameters/resource_id'
      tags:
      - Resource
      responses:
        200:
          description: A list of users who have access to the Resource.
          schema:
            type: array
            items:
              $ref: '#/definitions/Profile'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/Internal'
  /callbacks/{id}:
    x-manifold-audience: provider
    put:
      summary: Complete Request
      description: |
        A provider can call this endpoint to complete a request that had been
        acknowledged but not completed during the initial request as a part of a
        provision, plan change, or deprovision flow of a resource or
        credential.

        In the event that the Connector API can't be reached *or* an unexpected
        response (e.g. `500 Internal Server Error`) is returned, the provider
        should attempt to invoke the callback in the future to the best of
        their abilities.

        The behaviour of this route matches the "Repeatable Actions"
        specification of the API implemented by providers.  If the callback has
        already been received with the payload matching the previous request a
        `204 No Content` response will be returned. However, if the payloads do
        not match the route will return a `409 Conflict` error response.

        If the provider is responding to a request to provision credentials,
        then a hash of credentials must be provided. Otherwise, the credentials
        property must not be provided.

        In the case of a credential provisioning callback, multiple key-value
        pairs that represent this set of Credentials. However, if a url form
        exists (e.g. `postgres://user:pw@host:5432/db`), please provide the
        credentials in that form.
      parameters:
      - $ref: '#/parameters/callback_id'
      - name: body
        in: body
        description: Response to Callback sent by the Provider
        required: true
        schema:
          $ref: '#/definitions/CallbackResponse'
      tags:
      - Callback
      responses:
        204:
          description: |
            The callback payload has been accepted, Manifold is no longer
            waiting for the callback to be received to continue on with the
            current operation.
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/Internal'
  /credentials/:
    x-manifold-audience: provider
    get:
      summary: Get list of OAuth credentials without secrets.
      description: |
        List all non-expired OAuth 2.0 credential pairs for a provider's product.
        This does **not** return the secret.
      security:
      - tokenRequired: []
      tags:
      - OAuth
      parameters:
      - name: product_id
        in: query
        description: |
          ID of the Product to filter Resources by, stored as a
          base32 encoded 18 byte identifier.
        type: string
        pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$
        format: base32ID
        required: true
      responses:
        200:
          description: List of OAuth 2.0 credentials.
          schema:
            type: array
            items:
              $ref: '#/definitions/OAuthCredentialGetResponse'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/Internal'
    post:
      summary: Create an OAuth credential pair
      description: |
        Create an OAuth 2.0 credential pair for a provider's product.
        `client_secret` is stored as an `scrypt` hash only; if the value is
        lost after creation, it cannot be recovered.
      security:
      - tokenRequired: []
      tags:
      - OAuth
      parameters:
      - name: body
        in: body
        description: A product id and description for the credential pair.
        schema:
          $ref: '#/definitions/OAuthCredentialCreateRequest'
      responses:
        200:
          description: The created OAuth 2.0 credential pair.
          schema:
            $ref: '#/definitions/OAuthCredentialCreateResponse'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/Internal'
  /credentials/{id}:
    x-manifold-audience: provider
    delete:
      summary: Delete an OAuth credential pair
      description: |
        Delete an OAuth 2.0 credential pair for a provider's product.
      security:
      - tokenRequired: []
      tags:
      - OAuth
      parameters:
      - name: id
        in: path
        description: |
          ID of the credential to delete, stored as a base32 encoded 18 byte
          identifier.
        required: true
        type: string
        pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$
        format: base32ID
      responses:
        204:
          description: Empty response
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/Internal'
definitions:
  ID:
    type: string
    description: A base32 encoded 18 byte identifier.
    pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$
    format: base32ID
    x-go-type:
      type: ID
      import:
        package: github.com/manifoldco/go-manifold
        alias: manifold
  OptionalID:
    type: string
    description: A base32 encoded 18 byte identifier.
    pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$
    format: base32ID
    x-nullable: true
    x-go-type:
      type: ID
      import:
        package: github.com/manifoldco/go-manifold
        alias: manifold
  Label:
    type: string
    description: A machine readable unique label, which is url safe.
    pattern: ^[a-z0-9][a-z0-9\-\_]{1,128}$
    x-go-type:
      type: Label
      import:
        package: github.com/manifoldco/go-manifold
        alias: manifold
  Name:
    type: string
    description: A name of an entity which is displayed to a human.
    pattern: ^[a-zA-Z][a-z0-9A-Z \-]{2,128}$
    x-go-type:
      type: Name
      import:
        package: github.com/manifoldco/go-manifold
        alias: manifold
  RegionSlug:
    type: string
    description: |
      Combination of the cloud platform and location to provision this
      resource within.
    pattern: ^([a-z0-9][a-z0-9\-_]{1,63})::([a-z0-9][a-z0-9\-_]{1,63})$
  Code:
    type: string
    minLength: 13
    maxLength: 13
    description: |
      An authorization code used by a provider in exchange for a scoped
      Access Token.
  Email:
    type: string
    format: email
    description: A valid e-mail address.
    x-go-type:
      type: Email
      import:
        package: github.com/manifoldco/go-manifold
        alias: manifold
  Error:
    type: object
    properties:
      type:
        type: string
        enum:
        - bad_request
        - unauthorized
        - not_found
        - internal
        - invalid_grant
        - unsupported_grant_type
        description: The error type
      message:
        type: array
        description: Explanation of the errors
        items:
          type: string
    x-go-type:
      type: Error
      import:
        package: github.com/manifoldco/go-manifold
        alias: manifold
  OAuthError:
    type: object
    properties:
      error:
        type: string
        enum:
        - invalid_request
        - invalid_client
        - invalid_grant
        - unauthorized_client
        - unsupported_grant_type
        - invalid_scope
        - access_denied
        description: The error type
      error_description:
        type: string
        description: Explanation of the error
    additionalProperties: false
    required:
    - error
    x-go-type:
      type: OAuthError
      import:
        package: github.com/manifoldco/go-connector
        alias: connector
  AuthCodeRequest:
    description: HTTP Request Body of an Auth Code
    type: object
    properties:
      body:
        type: object
        properties:
          resource_id:
            $ref: '#/definitions/ID'
        additionalProperties: false
        required:
        - resource_id
    additionalProperties: false
    required:
    - body
  AuthorizationCode:
    type: object
    properties:
      id:
        $ref: '#/definitions/ID'
      version:
        type: string
        enum:
        - "1"
      type:
        type: string
        enum:
        - authorization_code
      body:
        type: object
        properties:
          user_id:
            $ref: '#/definitions/ID'
          team_id:
            $ref: '#/definitions/OptionalID'
          resource_id:
            $ref: '#/definitions/ID'
          created_at:
            type: string
            format: datetime
          expires_at:
            type: string
            format: datetime
          code:
            $ref: '#/definitions/Code'
          redirect_uri:
            type: string
            format: url
        additionalProperties: false
        required:
        - user_id
        - resource_id
        - created_at
        - expires_at
        - code
        - redirect_uri
    additionalProperties: false
    required:
    - id
    - version
    - type
    - body
    x-go-type:
      type: OAuthAuthorizationCode
      import:
        package: github.com/manifoldco/marketplace/connector/primitives
  OAuthClientID:
    description: |
      Client ID portion of the OAuth Credentials used for accessing the
      Manifold Connector API.
    type: string
    pattern: ^[0-9abcdefghjkmnpqrtuvwxyz]{29}$
    format: base32ID
    x-go-type:
      type: ID
      import:
        package: github.com/manifoldco/go-manifold
        alias: manifold
  OAuthClientSecret:
    type: string
    minLength: 43
    maxLength: 43
    pattern: ^[a-zA-Z0-9_-]{43}$
    description: |
      Client Secret portion of the OAuth Credentials used for accessing the
      Manifold Connector API. A client secret is a 32byte base64 encoded value.

      This value must be kept a secret.
  AccessTokenRequest:
    description: HTTP Request Body of an Access Token
    discriminator: grant_type
    type: object
    properties:
      grant_type:
        type: string
        enum:
        - authorization_code
        - client_credentials
      client_id:
        $ref: '#/definitions/OAuthClientID'
      client_secret:
        $ref: '#/definitions/OAuthClientSecret'
    additionalProperties: false
    required:
    - grant_type
  client_credentials:
    type: object
    allOf:
    - $ref: '#/definitions/AccessTokenRequest'
  authorization_code:
    type: object
    allOf:
    - $ref: '#/definitions/AccessTokenRequest'
    - type: object
      properties:
        code:
          $ref: '#/definitions/Code'
      additionalProperties: false
      required:
      - code
  AccessToken:
    description: |
      A granted access token used for performing requests on behalf o a user
      or provider against the Manifold Connector API.
    type: object
    properties:
      access_token:
        type: string
        maxLength: 295
      token_type:
        type: string
        enum:
        - bearer
      expires_in:
        type: integer
    additionalProperties: false
    required:
    - access_token
    - token_type
    - expires_in
  Identity:
    description: The underlying actor represented by the current Access Token.
    discriminator: type
    type: object
    properties:
      type:
        type: string
        enum:
        - user
        - product
    additionalProperties: false
    required:
    - type
  product:
    allOf:
    - $ref: '#/definitions/Identity'
    - type: object
      properties:
        target:
          type: object
          properties:
            name:
              $ref: '#/definitions/Name'
            label:
              $ref: '#/definitions/Label'
          additionalProperties: false
          required:
          - name
          - label
      required:
      - target
  user:
    allOf:
    - $ref: '#/definitions/Identity'
    - type: object
      properties:
        target:
          type: object
          properties:
            name:
              $ref: '#/definitions/Name'
            email:
              $ref: '#/definitions/Email'
          additionalProperties: false
          required:
          - name
          - email
      required:
      - target
  Profile:
    description: |
      A view of a Manifold User.

      Do not store any of this data, instead query Manifold for the most up to
      date information.
    type: object
    properties:
      name:
        $ref: '#/definitions/Name'
      email:
        $ref: '#/definitions/Email'
    additionalProperties: false
    required:
    - name
    - email
  Resource:
    description: |
      A view of a Resource provisioned through Manifold.

      Do not store any of this data, instead query Manifold for the most up to
      date information.
    type: object
    properties:
      id:
        $ref: '#/definitions/ID'
      product:
        $ref: '#/definitions/Label'
      plan:
        $ref: '#/definitions/Label'
      region:
        $ref: '#/definitions/RegionSlug'
      name:
        $ref: '#/definitions/Name'
      created_at:
        type: string
        format: datetime
      updated_at:
        type: string
        format: datetime
  CallbackResponse:
    type: object
    description: |
      A callback sent from a provider to complete an asynchronous request.

      Credentials can only be specified *if* the callback corresponds with a
      credential provisioning request.
    properties:
      state:
        type: string
        enum:
        - done
        - error
      message:
        type: string
        minLength: 3
        maxLength: 256
      credentials:
        type: object
        additionalProperties:
          type: string
    additionalProperties: false
    required:
    - state
    - message
  OAuthCredentialCreateRequest:
    type: object
    properties:
      product_id:
        $ref: '#/definitions/ID'
      description:
        type: string
        minLength: 3
        maxLength: 256
        description: |
          A human readable description of this credential pair.
    required:
    - product_id
    - description
    additionalProperties: false
  OAuthCredentialGetResponse:
    allOf:
    - type: object
      properties:
        id:
          $ref: '#/definitions/OAuthClientID'
        created_at:
          type: string
          format: datetime
        updated_at:
          type: string
          format: datetime
        expires_at:
          type: string
          format: datetime
      required:
      - id
      - created_at
      - updated_at
      additionalProperties: false
    - $ref: '#/definitions/OAuthCredentialCreateRequest'
  OAuthCredentialCreateResponse:
    allOf:
    - type: object
      properties:
        secret:
          $ref: '#/definitions/OAuthClientSecret'
      required:
      - secret
      additionalProperties: false
    - $ref: '#/definitions/OAuthCredentialGetResponse'
